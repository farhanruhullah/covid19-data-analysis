<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0618.0924                               -->
<workbook original-version='18.1' source-build='2024.1.4 (20241.24.0618.0924)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidAnalysisDashboard_17492270184420' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (CoronaAnalysis_2)' inline='true' name='federated.038nf2l1a2ombm0ztt4ur00jmzpi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CoronaAnalysis_2' name='excel-direct.155mo0p19bx13i15i3ya00or2lu6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Project/Portfolio/CoronaAnalysis_2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.155mo0p19bx13i15i3ya00or2lu6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.155mo0p19bx13i15i3ya00or2lu6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FA5B47570BC34549B2EFA22A4DD610C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FA5B47570BC34549B2EFA22A4DD610C8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FA5B47570BC34549B2EFA22A4DD610C8]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FARHAN/AppData/Local/Temp/TableauTemp/#TableauTemp_1a172510c8uag3108wcnd1vdw084.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/06/2025 01:12:41 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FA5B47570BC34549B2EFA22A4DD610C8'>
            <properties context=''>
              <relation connection='excel-direct.155mo0p19bx13i15i3ya00or2lu6' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (CoronaAnalysis_4)' inline='true' name='federated.18zmn4o0luckkg1h94sks163if5p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CoronaAnalysis_4' name='excel-direct.09quf9o1xsohz617uwf0c1bvn4tp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Project/Portfolio/CoronaAnalysis_4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.09quf9o1xsohz617uwf0c1bvn4tp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='ParcentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.09quf9o1xsohz617uwf0c1bvn4tp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='ParcentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEB127409AF9482CAA01764DAFF33EAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEB127409AF9482CAA01764DAFF33EAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEB127409AF9482CAA01764DAFF33EAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEB127409AF9482CAA01764DAFF33EAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ParcentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ParcentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ParcentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BEB127409AF9482CAA01764DAFF33EAC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Parcent Population Infected' datatype='real' name='[ParcentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BEB127409AF9482CAA01764DAFF33EAC]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FARHAN/AppData/Local/Temp/TableauTemp/#TableauTemp_0j4h3ue15xsg6z1b8p3tw0mwpin1.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/06/2025 12:06:48 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1206</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ParcentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ParcentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ParcentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BEB127409AF9482CAA01764DAFF33EAC'>
            <properties context=''>
              <relation connection='excel-direct.09quf9o1xsohz617uwf0c1bvn4tp' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='ParcentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (CoronaAnalysis_3)' inline='true' name='federated.1xvysvb0gcpz1k1107vr601gi6b8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CoronaAnalysis_3' name='excel-direct.18mjodr0cbezv413yxdzm08vrq7l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Project/Portfolio/CoronaAnalysis_3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.18mjodr0cbezv413yxdzm08vrq7l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='ParcentPopulationInfect' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.18mjodr0cbezv413yxdzm08vrq7l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='ParcentPopulationInfect' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D211:no:A1:D211:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1771ED55B8454653AB010ACC1392842F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1771ED55B8454653AB010ACC1392842F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1771ED55B8454653AB010ACC1392842F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ParcentPopulationInfect</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ParcentPopulationInfect]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ParcentPopulationInfect</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1771ED55B8454653AB010ACC1392842F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Parcent Population Infect' datatype='real' name='[ParcentPopulationInfect]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1771ED55B8454653AB010ACC1392842F]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FARHAN/AppData/Local/Temp/TableauTemp/#TableauTemp_0pvbdi31lck01p1eeaamb1oz000q.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/06/2025 12:04:21 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>190</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ParcentPopulationInfect</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ParcentPopulationInfect]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ParcentPopulationInfect</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1771ED55B8454653AB010ACC1392842F'>
            <properties context=''>
              <relation connection='excel-direct.18mjodr0cbezv413yxdzm08vrq7l' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='ParcentPopulationInfect' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (CoronaAnalysis_1)' inline='true' name='federated.1ycmn800uinhl31de80sn0sheje3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CoronaAnalysis_1' name='excel-direct.1u4791100lfiv81ct9ra41afocl5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Project/Portfolio/CoronaAnalysis_1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1u4791100lfiv81ct9ra41afocl5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathParcentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1u4791100lfiv81ct9ra41afocl5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathParcentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_682CA32D19EB4FEDAAA127B198DAC093]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_682CA32D19EB4FEDAAA127B198DAC093]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathParcentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathParcentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathParcentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_682CA32D19EB4FEDAAA127B198DAC093]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Parcentage' datatype='real' name='[DeathParcentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_682CA32D19EB4FEDAAA127B198DAC093]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/FARHAN/AppData/Local/Temp/TableauTemp/#TableauTemp_14tcc0x00dtmkt170cmju0j9n29u.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/06/2025 01:11:55 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_682CA32D19EB4FEDAAA127B198DAC093]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_682CA32D19EB4FEDAAA127B198DAC093]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathParcentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathParcentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathParcentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_682CA32D19EB4FEDAAA127B198DAC093]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_682CA32D19EB4FEDAAA127B198DAC093'>
            <properties context=''>
              <relation connection='excel-direct.1u4791100lfiv81ct9ra41afocl5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathParcentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Number</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CoronaAnalysis_1)' name='federated.1ycmn800uinhl31de80sn0sheje3' />
          </datasources>
          <datasource-dependencies datasource='federated.1ycmn800uinhl31de80sn0sheje3'>
            <column caption='Death Parcentage' datatype='real' name='[DeathParcentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathParcentage]' derivation='Sum' name='[sum:DeathParcentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ycmn800uinhl31de80sn0sheje3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ycmn800uinhl31de80sn0sheje3].[sum:DeathParcentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ycmn800uinhl31de80sn0sheje3].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ycmn800uinhl31de80sn0sheje3].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ycmn800uinhl31de80sn0sheje3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ycmn800uinhl31de80sn0sheje3].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ycmn800uinhl31de80sn0sheje3].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ycmn800uinhl31de80sn0sheje3].[sum:DeathParcentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ycmn800uinhl31de80sn0sheje3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ycmn800uinhl31de80sn0sheje3].[:Measure Names]' value='196' />
            <format attr='height' value='89' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1ycmn800uinhl31de80sn0sheje3].[sum:DeathParcentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#4f7f6f' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#666666' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='2' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1ycmn800uinhl31de80sn0sheje3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.813093900680542' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ycmn800uinhl31de80sn0sheje3].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{46D5EB63-A164-4B66-B68B-F17BE29D56F4}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CoronaAnalysis_2)' name='federated.038nf2l1a2ombm0ztt4ur00jmzpi' />
          </datasources>
          <datasource-dependencies datasource='federated.038nf2l1a2ombm0ztt4ur00jmzpi'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1754143238067627' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{2FB48D66-B646-4F75-8133-7B899B483C15}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000cc' fontname='Tableau Medium' fontsize='9'>Parcent Population Infect Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CoronaAnalysis_3)' name='federated.1xvysvb0gcpz1k1107vr601gi6b8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1xvysvb0gcpz1k1107vr601gi6b8'>
            <column caption='Parcent Population Infect' datatype='real' name='[ParcentPopulationInfect]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[ParcentPopulationInfect]' derivation='Sum' name='[sum:ParcentPopulationInfect:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[Longitude (generated)]' field-type='quantitative' max='-33795944.496162407' min='-53615122.589748621' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[Latitude (generated)]' field-type='quantitative' max='7263481.9974081982' min='-2632051.1720244139' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[sum:ParcentPopulationInfect:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[sum:ParcentPopulationInfect:qk]' value='Parcent Population Infect'>
              <formatted-text>
                <run>Parcent Population Infect</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[none:location:nk]' />
              <color column='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[sum:ParcentPopulationInfect:qk]' />
              <geometry column='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1xvysvb0gcpz1k1107vr601gi6b8].[Latitude (generated)]</rows>
        <cols>[federated.1xvysvb0gcpz1k1107vr601gi6b8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6AA8C1B7-B620-404E-98D8-EE981F67DB27}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Parcent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (CoronaAnalysis_4)' name='federated.18zmn4o0luckkg1h94sks163if5p' />
          </datasources>
          <datasource-dependencies datasource='federated.18zmn4o0luckkg1h94sks163if5p'>
            <column caption='Parcent Population Infected' datatype='real' name='[ParcentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[ParcentPopulationInfected]' derivation='Avg' name='[avg:ParcentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[ParcentPopulationInfected]' derivation='Sum' name='[sum:ParcentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.18zmn4o0luckkg1h94sks163if5p].[sum:ParcentPopulationInfected:qk]' />
              <color column='[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]' />
              <text column='[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]' />
              <text column='[federated.18zmn4o0luckkg1h94sks163if5p].[avg:ParcentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18zmn4o0luckkg1h94sks163if5p].[avg:ParcentPopulationInfected:qk]</rows>
        <cols>[federated.18zmn4o0luckkg1h94sks163if5p].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{D1E8E69B-C516-44CF-8D28-686941B05380}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98044' id='8' param='horz' type-v2='layout-flow' w='99002' x='499' y='978'>
            <zone h='98044' id='6' type-v2='layout-basic' w='89027' x='499' y='978'>
              <zone h='24511' id='3' name='Sheet 1' w='44514' x='499' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24511' id='5' name='Sheet 2' w='44514' x='499' y='25489'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='10' name='Sheet 3' w='44513' x='45013' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49022' id='12' name='Sheet 4' w='89027' x='499' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98044' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9975' x='89526' y='978'>
              <zone h='9902' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[sum:ParcentPopulationInfect:qk]' type-v2='color' w='9975' x='89526' y='978'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='207' h='26284' id='9' is-fixed='true' name='Sheet 2' pane-specification-id='0' param='[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]' type-v2='color' w='9975' x='89526' y='10880'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='301' h='37775' id='13' is-fixed='true' name='Sheet 4' pane-specification-id='2' param='[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]' type-v2='color' w='9975' x='89526' y='37164'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98044' id='18' param='vert' type-v2='layout-flow' w='99002' x='499' y='978'>
                <zone fixed-size='188' h='24511' id='3' is-fixed='true' name='Sheet 1' w='44514' x='499' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='10' is-fixed='true' name='Sheet 3' w='44513' x='45013' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9902' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[sum:ParcentPopulationInfect:qk]' type-v2='color' w='9975' x='89526' y='978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24511' id='5' is-fixed='true' name='Sheet 2' w='44514' x='499' y='25489'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='207' h='26284' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]' type-v2='color' w='9975' x='89526' y='10880'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49022' id='12' is-fixed='true' name='Sheet 4' w='89027' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='301' h='37775' id='13' name='Sheet 4' pane-specification-id='2' param='[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]' type-v2='color' w='9975' x='89526' y='37164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2D5850A7-C2A8-4C3E-8653-58BD9350A03E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ycmn800uinhl31de80sn0sheje3].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F447B70-E66E-4546-B3D9-61721FD5BF27}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9258A5A5-83BE-40C2-B860-9C3E9089F40D}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xvysvb0gcpz1k1107vr601gi6b8].[sum:ParcentPopulationInfect:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xvysvb0gcpz1k1107vr601gi6b8].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{95647F38-A5CD-4641-8D30-795AB4DCA1A9}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]</field>
            <field>[federated.18zmn4o0luckkg1h94sks163if5p].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7FF6191-2E58-4B4E-8BF4-7D5677A28176}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.038nf2l1a2ombm0ztt4ur00jmzpi].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.18zmn4o0luckkg1h94sks163if5p].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{47E4CC36-06F9-47F0-BCEA-408ABFD003DB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='113' name='Sheet 1' width='192'>
      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
      /vUf2bHFvOymxeRsY9efj7BhUy5G46MxN95E8uotFJU8eqadaWP7H8tIM+oBPXErX2HNRx/x
      +oGC+ZUV7WTf+1tYmWOaXU7FmHMpOPQHtm2dW+bFFL/Ovn8pp6Bwrly00Uz6pj3seP/V6Sfp
      qa8Stdh/GEt+IUa8zGQGEJomARCatugS6Pbt28+rLUI8d4ueAn3++efPox1CvBCyBBKaJgEQ
      miYBEJomARCaJgEQmiYBEJomARCaJgEQmiYBEJomARCaJgEQmiYBEJomARCaJgEQmiYBEJom
      ARCaJgEQmiYBEJomARCaJgEQmiYBEJomARCaJgEQmiYBEJomARCaJgEQmiYBEJomARCaJgEQ
      miYBEJomARCaJgEQmiYBEJomARCaJgEQmiYBEJq26P8kT4Df76eqqoru7m7effddjEZjyLIX
      L16ktbU15PWioiIqKiqeen1wcJCrV68yMDCAqqqYTCZsNhvFxcVERUUtUNPCAoEAlZWV9PT0
      hCxjs9mw2WwA9Pb2UllZid/vX7TuiooKioqKQl73eDycPXuW0dHRkJ8zHL/fz+3bt2lpacHn
      86HX67FYLGzZsgWTyTSv7Pj4OKdOnWJ8fHzRemc+r9/v5+zZs/T19c1ekwCEoaoqzc3NVFVV
      oSgKcXFxYcsHg0EmJibmdbBItLa28uOPP7J27VoOHjyIXq/H6XRy9epV3G43mzZtijgEM21Y
      rLPOWLFiBR9//HHYMna7nbq6OtLS0kKWUVWV2tpaVqxYQUpKSkRtfVxfXx8XLlwgOzubDz74
      AIPBgNfr5datW5w8eZI33niDlStXzpY3Go18+OGHYetsb2/nhx9+ICsrC4DY2FgOHz48r4ws
      gUIYHBzkxIkT1NbWsm/fPvbu3bvoe2Y6n9lsjvg+Ho+H6upq1q5di81mIyYmhqioKCwWC/v2
      7aOhoYHu7u6I6/P7/aiqisFgiPg94UxOTtLa2kpBQQFJSUkhy/X29uJyuSgrK0OnW1q38vv9
      XL9+naysLHbv3j3bdoPBwO7du8nLy+PKlSt4vd6I65yamuL+/ftkZmaSmZkZspwEYAF+vx+7
      3U5ZWRlHjhyhoKAgohHY5/MRCARISEiI+F4OhwOdTkdpaelT98jOzmblypU0NjaiKEpE9Y2N
      jaGq6pLaEI7T6WR8fJw1a9aE/Dvw+/1UV1djtVpJTk5e8j16enrweDysX7+e6Ojoedeio6Mp
      KyvD5/PR2dkZcZ0zgSwtLUWvD73QkQAsIDY2lvLyclatWrWk9ffExARAxJ0vGAzS1dVFVlbW
      giO2TqcjPz+fgYGBiEe/iYkJdDodsbGxEbc7FJ/PR0NDA7m5uaSmpoYs19TURCAQYPXq1cu6
      T39/PyaTKeQMYzabycjI4MGDBxENBIqiUF9fT3JyMtnZ2WHLSgCeIa/XG9FeYYbP58Ptdodd
      M6ekpKCqKmNjYxHVOTo6Slxc3FMj6XK4XC7cbjdWqzXksmZkZISGhgZsNhvx8fE/+54L0el0
      pKWlMTo6is/nW7T80NAQPT09rFmzZtGBQALwDA0PD2M0GomJiYmovKIoKIoS9lRpZmaIdAYY
      Hh4mMTHxZ88AwWCQ+vr62WXYQhRFoba2lszMTHJzc5d9L6PRyPj4eNjOnZKSQjAYXHQGUFWV
      hoYGEhMTsVgsi95bToGeoYVOfyYnJ+nq6qK6upro6Gjeeuut2ane6/USCATC1rnUDeWTR4+q
      qjIxMYHD4eD27dukp6ezf//+sLOUoihcvHgRgPLy8gXbMDk5yZkzZ7BYLEs68VqI1WolOjqa
      r7/+mtLSUjZs2EB8fDzBYJCRkREaGxtpa2uLKNS3bt2ip6eHd955J6KZWALwC4uPj6e4uJi8
      vDwqKyu5ceMGFRUV6HQ6DAbDorNFpJvfUKKiojAYDKxbt468vDzOnj1LbW0t27ZtC/me/v5+
      enp62Llz54IbSFVVqa+vZ2pqijVr1vys9s0oKSkhNTWVqqoqjh07hqIo6PV6MjMzKS0tJTs7
      m5s3b4atw+Px4HA4WL16dcSnYBKA5yQuLg6r1UpNTQ0TExMYjUb0ej16vT7sw5yZpc+zONY0
      m81YLBZcLhd+v3/BEVVVVZqamkhMTCQvL2/BeoaGhmhqamL79u3P7LgVIC0tjUOHDi14rbq6
      GpPJFHYWcDgcTE1NUVxcHPE9JQDPUWxsLKqqMjU1BUyHwmw2Mzw8HPI9w8PDREVFkZiY+Mza
      oCgKqqoueH1oaIiOjg42b94ccglht9vxer1cvHhxdqm0kKNHjxIbG8uBAwdYsWLFstscDAbp
      6+sjIyMj5Izp9Xq5f/8+xcXFYZ9XPFmvBOA58ng8xMTEzP4j6nQ6cnJyaGxsxOv1PjWaKopC
      R0cH6enpz2SknTlNCndK1NraSmxsLAUFBSHrKS8vp7y8POT1CxcuAE/vR5ZrcHCQkZERNm/e
      HLJMZ2cnk5OTS/rqSF9fn5wCPSsDAwM0NzeHHFndbjf37t2joKBg3nHhzElFY2PjU+99+PAh
      PT09lJaWRrQZ7u7uxul0hmxDb28vTqeToqKiBdf2o6OjtLS0YLVan+nS5ufw+XzcvHmTnJwc
      MjIyQpZpaGigoKAg7Nc1HjfzrEAC8IwkJCTQ0NDAl19+SWNj4+xDMUVRcDqdnDlzhsTERDZu
      3DhvhDKZTGzdupXGxkZqamoIBAKoqkp7ezuXLl1i7dq15OTkzLuXqqpcvnyZL774gt7e3tnX
      4+LiqKqq4sSJE7S1tc1+wS0YDHLv3j3OnTtHfn5+yAdWM1/ii+T4cLnsdjtHjx7F4XDMe/3a
      tWvU1NTMPslWVZW+vj5Onz6NTqdjx44dIQeBzs5O3G43JSUlEY/+/f39PHz4UJZAC3E4HLPT
      +JOOHz8++/Pj61uj0cjhw4dxuVzcuXOHW7du4ff7iYqKwmw2U1ZWRklJyYIjb2FhIUlJSVRV
      VVFbWzv7bdDt27cvOKW73W46OzvJzMycN+Klp6dz5MgR2tvbuXv3LpcvXyYYDM4+SNq9ezeF
      hYULdhKv10trayslJSVL+i7TUvh8Ptra2khOTn7q2UJpaSl2u52TJ08yMTFBVFQUJpOJTZs2
      he3YwWCQpqamsM8rnjSz0U9KSiJKDTVfPvLJJ59E+PHE82K327Hb7Rw8eDDiKf/XYGZWKy8v
      D7vHeJ5kCfQbMzOKlpWV/aY6v6IoNDc3U1xcTH5+/otuziwJwG+My+XCYDBQWlr6opuyJEND
      Q7O/K7GULxj+0mQJJDRNZgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgCh
      aRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkSAKFpEgChaRIAoWkS
      AKFpEgChaRIAoWkSAKFpEgChaf8PJWBB6fpdruwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9V5AkSXrn93OPiNSqMktr0d3VYlpNj9idmd2ZVcDugtiDMBKwwwKgGWgH
      I448Mz6QfF3jG19pdgR5hzOSRhyBvQOwAsAuVo7WorWoFlXVJbMqS6TODOXOhygtuqtnuqdn
      j/y3VU1NCHePiM8//7SLv71Z0HlXsh9EeYGzoVcIhwAEt6cjFHq/ga6XEcksIIILPRuUglB0
      y9168/zWo+Ul4vkP6MuVma5102g/jY4kg5O+S+fKKwzlVtZHsKU1hUAAgou3EnjhDM7gc7va
      N0uzPMc7tKclIWvfR/tMQWlwPM3YgsWxTocfFY5Tbz32WMYSF5qhiOJKw3gs/X9suE2Si+9h
      Gy04nU+wF+3thJl3JZPO3g+qGxWGF36K3zfD+csGPV2aqtPCxNIqqcmfUD7+e4hwdK2hSaK1
      u5SHv44QAq01rM5DSyf4Pub4W9iuiWjpQOZ6aF26y6GeIiPhCd6byDOf+xJGfZnInV8QbVll
      1ZCYpsAwBa6jcV2f+TnF0IiFYUi6s4q5So6x5nMIuX38OtzL5NQIzy+9Tzbc5IlehRD3fxmP
      E/9wMUQ91M717q/x1sWXKXe04O/zXR41Oi2fsCv2pYvPIrTvMTj3PYa6piksG7xVGkFEk/e9
      z9y3QbtOZvpnPDE4h90UTK62EokVuRb9OtnyBWq9n4NQJLi2Xuaw80vqZoryegOey/DCd8nX
      PkfDbCW0cptzfQvk5zX55VMstr/EnckfcnhY01If40R2nIl5xc1mFxNzTaqNBmjJyIjm4lUT
      YYSJRCXFqSxn+uaYXk5xJ/ocQuxevYSUuB2jXJ2Y4uvxO0BwjVIa1wchIGR+tibE0bY6f73c
      B4ZFo6HwYi0H4F+PBnlHsuDIgzDQxwqtdfCHXSc3/RP6W6aRQlD1EmCGD9TGvhMgPfFPfHH4
      BuWK5M4tF2fkRa7YZcKlSfr1u9TFDCt3b7HU8+uARguDVjHLpOegzRCYFgW3m9zyWxTpIhT2
      mZ1yOfe0wQdzdeb6j3P5xipTEyUaZojB0HvEY4oeXWVh6Pe4a8UQUjJXnkEdCaHaD4Fro6cu
      408ZzCeehq7RfR9MRBO4rUNkE3c4P6FZakaIREzGFkK4nYc5xnXOtpfJxD8bX3mww+DZ0kfc
      makxH+1A2A1EOPZ4BiME+vH0fCDoRgVj7gr9xg2qOktfeJK+wTpSCgrLkhvmSwgrdKC29p4A
      WlOqmrx84xAUJtADz5CoT1D2EvSV38bKSo53F/C8RX4+EaV56MssuF2cTi9jXfkRfYk8U62/
      QSU1SvP8dWRScvJElbk5A9CY+Gjlo9NdlGsWHD7D7MIYjfoSJdEO6U6kGQjvfqIFtAblg5CI
      gVPM6ZMYl3+MuscEACi2nebPC3HCpVtUep9BGAa6M4UwDF7zn+W92Qt8yXiDZ4Yf/+c2Dfja
      sSb+9XHynf8s0Kf+f+yCblQJTbzFEfMjDg0A5AGoNgwuLx9hsfWLkMgeuD3jN/7l//idor9D
      jBACOg7htAxjtxzCFyH67bdZsQ7RqW5jmoJ0i0BKsCpzzHME28jQrm4xlJ4lYdWpNC0aPZ9D
      +z6D0QlMqQhZmkyLYLoQp7SqkKkcorKIaB+mUaxzdmCOntQKd+/UUYl2kBKqK2TnX2G49kuG
      mq8j8repWe147aP35ZBCCFQ8h9N2OLg2FEXI4FmFlPjpbm6VM0TK0/Rm/Af5Dg8dpapGa+hL
      N3m3NorIdj/W8XwWoe06fTP/kS8O3aI1JxBCUKpILi8OctX8GtXuz+8wwtwf+4pAwjDAiCMi
      cZTbzu1mG8nFjxCWSXunw9iYz9AQ9PRAaPX/xPZMojGHTFqilKaY7yIy+x7NkWcZrx/GXZjl
      CfFLBJKF8RLavMhx9QvSLQbvVI6RY4ZQCKQUnIxfwJu9REm0kfQLHB7RBHQr6GorcGvqe1zv
      +KNP+DrXnrP3KNfn5nhWX3isinIsInjjssPJEYNkZZKSayO6Dj+28Xzm4DSI3PgpZ47OI43A
      yHJnsYWrsW+hBrs+9rfbdwJshbDCaKsDijEcN8LUlMP4Yo6Sr/Edj5HuMgOdPo0GOA4sLBn4
      kRYOLf2EMU6g24aQZoTo6i+pVMDvOk4ibjDUs0AopIhOX8bxA45tWTA0CKDRepGdzyUlRMM6
      sBs+JBRFiqYH0cdoMjUNODFs8m+vHiYVKnDSv8PlWjsinn58g/qMQDfrxK5+j5eOTmGaAt/X
      XJpqZbLjdxHJ7CfS1Q80AdZR6XuRSv0M2HVEukjMeY2uRBmhBe/PHWPBOoqhbdxUN6TaGUv8
      S0QkDoDIdHDB/yOUq+FoB7X8BNMLUYZ7Gxg4VML9FBYmaW03uDvh0tNnYlmbj7aQ92lrNxAC
      5vMaIvVP8NjbUe44y/91Z5k/OXwVy3h8q4CBpsudYmr021QqeTigIvefPKQk5S8QjgScf3VV
      MW48i5E8uKy/H3ZNAK01OE1EtUC4Po/dfhK2ytqxNDqSpL/6KsOti5RqES7pb9DoOx3I3GuX
      CYBoYuM2ISS6dRB8DzV3G9k5zPk7zzIx51LLHEZF0rwxZTDsjDFZbUfMX8b3BYurJtGYpCQ7
      WXWW0WaE5Y7T6Fz/Q7PSCWmw2P0FrubvcKbHfkitPjjSCRhq91i+8QuqZ397l3/jsUBrdi3D
      nzYWx+lodQOx57bPZfsZ5KmTn7hZf35ijxVgcYLT9t/Rlm4Q64TbhQuMec8SMZo40Q687BBC
      Su52/g5TxTl0qhURTRyYGHW9guw+hDBMjGOfp+I00U5g8hNHnmeC59EDio9qLwQvfiDwNWCG
      WPY9EAJhmA/dRK19j+JKDXoeaFF8aCjVFFLCcglCPQOfDeL/jCCcv0z/SYXraOYYgSe+/FD0
      NaNzcI8JkGonvGyTSAQdHG5fpL3091iWxFMWb678Lm52JLCztg3uS4ha622D1E4TvThJpnKF
      ak3gn/kW5soEZ93vEwv73Cn00zRaWDQOYfQegUQG3ayD70E4FrRlWmitd7X9UKB8Jt2uNb3j
      0+F4G44cNPOr8NZsjrmeL6Hu8V4/dTxG7q+1Rs5c4mTbHaQU3L6tWWp9Dmk8JCYlxB4ikPJZ
      aLTRzeLaNYJMBkAj8Hmm+H3erPwxJFt3D1j56NISbaX3SclVJlv/M3SsBa0UqRvfYzQ1TslV
      jLRKPqo8R2zxIqlul1Rakm2ZolSe4pecRWtNZvZVRo0PcGyf8+k/wrRX6LU/ZN7rJ+3PU4v2
      oowI9fYzCPMhaK/xDMXYIJ6/iPWIF4GthP/6NTje5zPaC0d6C/wvt+aoiKFHO4BfFTRrdC2/
      TG5Eo5Rgwe1Ctvcf+PZdTFhr8L1t9LIrjkD6Dv0tBfQuX2CggLguGPmrmMW7u3t0bcTibeLO
      HMfbpjFLM2vHG0T9FaJROH7coFgNgxUhlXBJpjZvv148BJlOovkPeSH3Fl1tDhPqJOm51zlR
      +R6ne6fpqH3AkcwEX+l8g6+2/pzc9D9tIaiPDyEE5f7P8fZM5hO3dT9orVmtK966bLPgxPnR
      nQ7G8hb/282nqLUceuT9/8rAMKn7ccJhwfycotj7lQOvSLq8xNDEv0WuTm0eq67ijV9Cb3Ey
      7poAodVx0qndTiHfF1y9FSa/GuErnW/QU3oNFsfRdgOK81BZQq/M81LuFZKiyM3JEE6qH+3a
      RBcvke/6JsWiZmVVMOUeQk59hNVcAqHRaJoNzWL8LPgeI+47WCHB0hKsVKOEFq6SywVEfmTQ
      5uJkK0JoPE9zKn0FvZp/4He7F0wJNcfE/TScsBqqTU2CGrHqPN+vf5nl/i+hUh2fQue/GsjO
      /ITnji9i25rLlZPo3MG5v1qZx9URlLdGy0t3wa5j5LpAK7TvwezV3RMg695eczptwrYN3rw9
      SC7rcfZwkXBEsDJX4ovirzmx8O9QxQKDU/8P2DWUD4eHffJ6GBFPI6rLnDVfJrfyDq3tknhU
      8bneq/ilIjKaoLCoeO3mIT5YOomfG4LqKi3RCgDzdjc9qSWOHjeIJwA00ahCJjO8OXeKV8dH
      uXjNQnvuQ1kFtOdyfUY+lLbuhcCDqZDhCOONdobaPNqWzqPV4/VGf5agywVOpK5hhaBaF9id
      pw7O/esljjo/oTW8wBP2D7CWxtCpdqzJdxGZ9sCQUl0mWpvaPgF0o0p3srCtH88T3CnkwIrS
      mfMCjq0Vz50q09ICHfESQ5VfcLi/Rqt7k4odWG1a4s2ggUwXN9xzPNU7QTolCEcF2YxiILfE
      tHyCbE5QTR5iafA3EYZBvHSNXEtAgK3GPAWnE19J5Jp9vrCgWZ5rsLAgGBBXeeEZl6eqf4lV
      GPuk7xxPC0LuEob04BGGgwkhGOw0+fxRiNCkHOpEKu+R9fcriWiKZiP4BjN2P6Jt4MC3GqUZ
      hvvqDHQ1GO4qk6rfQoSiROMCykvEb/yQ9J2/x00Pbp8AojBByqpsayy/aHEz9S3aQousE4Vh
      SKIRAQJSaThzrEE8BhlZoOQGtv+cuYD2HBCCle4v88vKN6nVNQKBlAZ1P4bjW3x0wcRp30z8
      MLTLpo6oCRVvUSr6KF8AEqUkvdFpuirv4TmaakXR2wO5+VfQ9id0jinFaK9AInlUi4DtKAqr
      AbHHQ/DHz5axRYiFltMPR5n/TwBaa1J3f0Znh0Kj0EI8kDUq6hQIWZsfsEkS7TSIixVEbYWG
      F2Wkc5WvJP/DjhWg5xhv8G0Wi4m1zCtJRedAK+KUcF2J74Py9ZqSrEDojbjx7kQRxw9WgO5c
      g9DiDQCEaeF1n+aD4lMsLnhMTRuUzAHa1SRWLIxobGQRIAxj41lb24LJ1tIWQkqBQJBrlTz9
      NJw6ZxIO60CJFgKruYy69gZ+fiKQ7z4OBPRkFXcWfH563mep6O0ShzzPo95o7NuE67q7DAhK
      azwvGJM0BNdnFdMLHo4HUmpe6s3jOS6PbNb9qsH36A3dRggNaCL+KlofTDHTWpMVsxs0VKtq
      qpEBjs7+GzoSJTLObZ7vO0885hMO74gGFVKioi2srGj6w5Ncmu9jJvosfnaQfClOYarE1IRL
      Z6va4qWXa5MFojFNZ7qMlEGk6EwxjZ0ZCdoWgoaRReRvc739n0M4SW/1VZ4YtbELS6wmTyKE
      QFbyZOwJhIRIWJCI2hTrMXKpQKQyTBEktIQg22oghMb3BXN3HWp3pzgauULIW6WaOvqxbNju
      yhI3Sq1Ml8IcbqmQSWx3SFWrNTQa23Zo2ja2bWPbDo7jUqvXcV0PgaBaq9G0HVzPpdloIoTE
      skykgJ6cwdiUy4UJRUdWE48K8rdmKSSPbmTY/X8ZQhqsLmvy58foH5REjCbjtSOI2H0yvLQm
      Pfc6Z7PnMddM2XeXsqxag5zNfIjrGdyJfJlobZpctIQVEnuHQzvhHLNLUZb6volKtCOEINRc
      5GTyMseO+IRC60uS2CD+tREg1ji1UpqJ+jBOqn+TEK0IpdZzyGiS5MJ7nBuYQgjwG3XmrCcR
      Vgg33EphqszkjElHokwq5ZNJNpFis4/gd8AdBAZSQiZrEIlAOmOQv7WMH8vhx1ofyKklpMFy
      apRaU+PG25ibWOBUj4O5JT7IdT1cx8WyLKRh4HkeSum1QD4TpRRaK3xfYVkWWimUDv42TRMh
      BG/fUCQjcFf3875/lrPJCQZygg9rI+h4y4HHu0/K9SOFblTxxt5HX3sDHUmQGH8VO9r20JN3
      VCxLc2KcbKJGS4umUbIpxUc3wtn3gr9wl2fN728zradjDe6WeqBRZaC9SKp8jYZjMZWP0dfR
      CCbAylIBIvENYhGmhZfq20Y8SkvSq5epFh1Kdpypche+4xIPu0gpNpZ9wfpqoom6BaYmPURb
      P3p1AXwXuR4cV1mkg3HCEYFlCKZWs6hUJ0jJsPMmzxzKE4lppGAL8QfQaFxXYxhr008IwmFJ
      rs1gfsbHkj7ViXE6xBQ1qxPC8Qd48z5nl/+entAqdyKnSDdn6Upv5hSHQiGi0SihkEXIsohG
      IkSjESLhcHAuEiEcDhONRgiFrODvSARzjSVV6z5vXle0pQSm9LmVeZEj7kVu37XJh4Zwkw9g
      Bv0UiV8rhbr8Cv71t+hRY1iGj1y+S5caJ1O9SbNYwcv0PrQQDmGGEO2DNEoNyoU6fmGOmh1G
      tfQG5/dgbEJ5GKUZOtLVjWNSQqGcYEEcYSRxm3RS0ZZu0NFSxzAFxm/82X//ndKNd7CwUYn2
      QJE0zN0dhOMshJ9gvt7GsteKKxNMrHZQmZyhq0utMfntq0Ey6tIXucvKgk1TZsAMbyzxifIt
      DrXMBkk1JtSnZ1iNH0OEoqwY/ZRu32V8QtDT4SOkRvlQXNGEwkEf730URgDpJNvygrOtBndu
      OnzhBQPqReamHUTHCBzwwwi7RmjuKkOpMs9kplhY8Rlq3/uFPyi01tyZdanWFZfmIpSivYSl
      x/vuKSbEMG5L3wMndDxqqJV51OoCqjCNHr9AT3ie06MKreBYR5HuLujM2BxJzzE+Y6ByB7fW
      3BfhOI3scVZanqbc9gw6001s6nVMVceLte+6XIRjZMsf0p7anABaa27VTmAIl8HEJOv6tLGW
      E27602MMRW9iNG9zSx+DN/8Kfe5bgbfMCiMTm57RzOLbPNv6IbFYQBCep9kMy9DsZTqMRjVH
      Su9wfX6R6plvo7VGzYxRN3K4a/drFGU3CZ4T3JRsIz/6h/i3P+JHlxdJGkUiIZeIvcLi1SiJ
      zizR5Arna2eIr7xBLrflJQh44kyIhXmfuWnF2f7LXJ9pxx74/IHeeXzpBt9+apWf38lydTlE
      qj6Dr8KYD4GxCSE4Nhii6Xs8f9KnNTWJUpN8eEfzsvoiTvyTh/c+TGi7gfXKX1A3W4hRZbSv
      STJlkklBLNpkZVmxtOBTaRpcr42gzp5Gzo2hO0YQDyteh0AiYc1CJk3JSP1HXJw10al2RDyz
      IRbpZg1TbTVQBPqi7YcYlh/u8m8BGP/Dn539Tkd2jkS4wfR8hPbGZSq0cs7/HkfE+yyXLJx4
      kJ7n+Qa9+jqRcEDoAVPdrp1rDY0mmGYw+85fMLhSPY0d6UC2D8DcLUZLf8diMcL0eBNPRLCw
      KdsJqpPT6HQ3IhJDmBayvR/LK/N8z0W8apOx+Ta8k9/AKSyy2vIUynVYKBj05VYwthBoOBJk
      pVUrikLBoBwbRrT2Huhlm8pGL0zw+YEKrxWP0OLOc6zPeGgBckIIOlskiYhECEGxpvhx9XPU
      Bj73+MOO16C1RldW4d3vkaFAxK/xm1+TdHYadLSDZcF83uVwv0FXh0Gt6mEvL5AtfUikcIWa
      l4CWB8/S0s0K1EqbwY97wEn2UyhGOel8nyPWB0RXrlGtSfxEF9g15OSHtLbY23JJJssDJPUi
      rckasP01G//qv/vGdzxVxLKg05ggl1N0ytt0dXjEYpo+a4Lw/IfU7RB2bpSZUgv5YoLplRRd
      iUWMLQqi8jWLyyHeyZ8hqlZJJ3zspod2HeoDL6KWpulufsTpkSVizXnuZr9BRaU5lLrLYFcN
      Z3mFpWVBypvDSfcHL6G6Qr9xg+4eQSpUYaWZxh39KqKUR0dTiEaJxWY7/ZmFtQcLNMNoVOJ5
      sLQsiIQ9mh0nD/RBvGgL+Uac96uHqHU/SaZwkeFOTegTrgDr5tStY1gs+vz7xc9T6n8O9ijv
      8jiglQ+33sFcvMWQuExPl0FHmySfd0mlBeFwoIMVFn262gMuf3PCo/eQyfAh6OrWlK7fpM2+
      hlEr0DBzELq/gqy1ZmDurxlVrzLDCUQ4Frwz1962mqj8BDrTRao5wUBnldZkjX5rjJXxPPVQ
      N7WuZ0iUrpNJOBuEfqN8DN/TuLbP5EoHKatEaM2Kafzpn33jO65fBCAc0kQikEhsRtGZhqAl
      5dBr3iKyeIlIcZyQBbP6MCOx25imRilYKsCF1VPcqY3QG5vjVnWUuXonroyzZLfhh1NQLhAW
      DVrMArlWweRdifAc0uRJpiCVNLg76fLS4WvMrabwEl1QXSFduUYmIwmHNLPlHG77cShMwMBp
      PGUQqs6yPN+gu8PdVOQRVMqKiQlF4+k/RD6AlcJLtOPH29G+x5di79OT+mTh17tDKzRTBc3f
      rn6eYt/ze9Y2ehzQWuO/+0P02Ht45SInRlxGjxjcmHPxLY1bgVpNUy6BZUC2JRj3VMGnZzDg
      EEJCe4egp71BX3KOdPkqi/UcKr49eljbdZBbV1ZNdOEiBXmIZvYY+B7pyX+isVRC5LrBaWLl
      LzPq/oKKlyBCjc7kyoY835ddIrFymWW7lUVzlB6ubRD5ajVKofsbiNU5Uv4MF8rP0J8I0ivv
      K6itW3dCIRjpKkGXoFGvULxr8ur8c7geOJ6JMXyaxNQrnAi9hRWCWj5PPvHbFHsOo2slZCyF
      TrVSWG7h4tg0dqgV7+hXMe0VkvISoDFMRUfOIxwG6+5tGokheuzzDAwYCAQ3bho0B08A4FtJ
      pGsj2/tp6BqlOzbxm3mOHnI2xKGOLoNDIy5Xf/mXhL7+X0EociBC1loTvfZTzhgX6RoWCPHx
      2b/WmpfP27x4OszdJU3BSfChc4xC+gT0ZT9bFeuKedTqIrmcheGWGZ/1uVp0sbWmktEM1OH5
      lhCGFCTiwTtRWhPZYWQLrdWkEgK6cjWipf/AW/O/hdv5xObzei4t1/+KTItkpuXX8VLd5I/8
      MQCx/HukS5foDM1z3vg6Q5P/jo5onnBMkExpOtyfkrbcbaKMEIK+Ho9o6WdcyQ8Sa920ER9N
      XmFuspuzPVcJh6E0Mc/SaoieTnfrCnCvD7Gdg711c4jV1s/jtQyg20cQfhMmztOoafzSMl1t
      HkP9Ls3CCrpawm07AnYdPAc9eYkXz8xgF5Zp1n1ORd6kLW0jhMQwBB0tDXwfLusvEx1/mZ7U
      MrlU4EWtOFHyrV8JKlaEo4hQlO65H/K53FvkF01WVDtxo0kqEegl0tC0tRmE/Brz714Ez0W0
      D9yf6JTPUP7nxKVLqeLQ22Z9IkJ9Z7GTdyojnJfnuJF5iUbLSJAB9xkiflVcRM/eRLQP4s/e
      JpqwqcY0xVZw4iCkoBjSVOc1J4esDc+8IPi0DU8Tjmx/nnUfUSSi6TPHqEzNU0seDjL6QhGi
      zTme7r2BtzjHcvIMulElu/AaL2Rfpq+tQsjS9Ji36cpWSKeDdqSAiKH2VZeiYZfu5NI2HWB2
      KUGh/7dIFD6kJeWyPFujt9PFsg6UFL97+T43MEl+dZGmnSDBKtm0Q71H8taVDgZGHFpbg8d/
      6vA8rjvP7Ox5omGXsOlT7TEQEqIJg5Qs0ZOrrvkOJEKAFdKgBVk1QyXZw3DX9MYIBjtrTBY+
      pNb9+WBFUT4tMo9hgNd3FjfawYQ9Rq8+v+Gok1Jw5FgIIaoo/RpjYxI1+sI9iU8uz9AfXcbz
      NMcGLQJF/+OtAu/PJbg99DsQCWKkPjskvx0i1Yo48QX0hZ8x2tfkilbonAhCXdavEYKGVttD
      PQQM9Zp8OGaTSm8vp6jRm5MgrHh24AbvTf4Ni4f/AK01SbnKhZlBpmJfhGaV/pnvcmowj7lm
      oozFg58HeWtCBHrKxhg0LKpBsGtEQ4GVMZ1S3BoPceKYvXUC7B2HovSav3XLi0gkFIcSNaC2
      cSyZVJzsmWFiHPoHN4nFsmCwe/06QSatAE1HO1QnpkBterrWKz8j4GzyfZY9uREPAmAYELUX
      NnoV0uC2fJ67yw2cvqcR0qQ5M4enwJBiw4EmBBw5FmLijotx4zXcUgl5/Hlkcm+va6I5z7Mn
      rC1ms49Htp6v+aB5HFoT97/4MSNkSsIz15EL75IYBO2uE3MgSriuj2VJKlvCrASBA7Sw7BNv
      Ca5fWREk4npDDNo6CaQUdCcWWHCaYJiYfhNlhiDXh8iPcXpwfsM+/7BQWJIs5l6ifflV2rtd
      QDDYv/4QW3QAvXEogNJQVyYNZWKiSJvOjokgtt0pBHR1S1aWfZTSyJ3u2229QColePK0u6Ot
      TWRSmmTcxXE0tWrgCCvYrRQ6vrztaqfnSZz1FmrLnAy/hYPE9QUJQ+M2FZWSpq1D0j9oIoXH
      xPh7NK+v0Hj623sqoJXsKK+PfcAXj9bWVoqDB6ltVXjPz4QptJ27//TRAU/duSpprUDpQOR7
      xAg1yoiP/j1f+7LJBzdtqtJFVNfHofF8H4HAVhb5eZvOrsjGvdW6Jtqy7ikXfDDWyUBHkc7W
      BjuHXvMTgXtWGsxGnuKl9A+xZv4NKauENGF3JuLeEPd4q80GvPumom/IZMx/mrCcZzR5fc9V
      34TtndrKoKFMfC3QCLQGQ0LRCxM3PAyxnrSh2JlQlkgJDh2RO4h/k7vrLUVTdsYQscZNth6f
      mA5z1T5HZ+U9FmspvKd/DxHbEuixtYVmlScq36WjzcFWBraS4INT1rx+sYUnhlZJxjS9AyaN
      hmbMTu1rfTHtMmf76khhbhnz/aG15vKEx8khk49mY7wivnig4Da1MEFs+n0ap74VOFfsOqAR
      y1P0OZeZDD+J0X/8wOP4OCjevkpvRLC4aHO97uJFPYQWoAP5Hw2e7xHyLRIJY+MrCQS9nSZX
      px06+w0SCUVva5Hz8reIFpbp8K7Tk5gnGvaYL7VwK/XbdMz+AzGjRrUmCLVpjvUWgN1sZn2F
      2QuboTe7iToSheGjFjPLGULZMGf4G7J7k80eOoCGpOFiK4OmNlBa0lQBoZhiJzHsHlyubSdR
      6c34IOQ+DxQ8hNaKy1clnV0GbTmfbMZHTleZtgfQIRMzcY9AMSEJCweBxABypo8hNFfyCqPv
      MFeNFIP5nxCNCgqLGv/JZ3anw63BjbdydzXMqbiP4GBOMKU0DUdxY8pjXB/icuYl9AGKtOpm
      jeyN7zHaU+PK1Bvo8hKH0nlKyw3OHNOk45qf3vCY9w4/snwBrXzC+Ss885TFK3cUZmeItNhd
      lMtfMtBasrBqkUhsiXG0BIYvNoLz+rsaiPz3OZ/9rxmPfp7xyhJGo4yfznJo5YO22IQAACAA
      SURBVD9ypHMO0wDPvXeIyUFXg73Q1+vT17uM1q9xr6hBc2sXAkHYCIjcVhIfgSV8ooa3pqY+
      hOTzfQYiECAkRw7Bazf7GFqZ5G7kKUZj73LDO4rbd263iGA3iM28iZPsx6rnafgutGo0EnMt
      NmlwCKZvLWEfe4nCe1cwZ+bJd34Vc4+qFhtjCcf5ufMCh91fErY0EuveNjIN//f5HFOpc0SO
      xGlkBw+evrc8RyN7hGsrBVLeRzxzyiWbEvhDYkMe/trRGX40/XOWB79xoDYfFLpWpiOyRCol
      UFLv8slpNLpsYIS/hPXkF/lFo4JV+AsG2oMiYlprmt5mXogQAscPgRUOqnonW1GpNtqmfsix
      7rnNiRMS2/p4UGxdIfalq10xatthCuQah94cgNIEsr5WhKVPWPo7OnhAF/eWQa6HMW8VjdZe
      MaAJR+BLx8epVzXXV6NkM4pf67nGneUVbjZ+H7FWbU5rTSb/Os91vY/S72AbinTaACQ1FVSo
      i0pNMiUZjE1wc+oytRP/jPFbb2EOn7p3/XghqHWf5Ur+bXSlyNkjJiFr72fWWvOPFwxmu15E
      5wbZP1Vmn67aB3CLM2T0LZ45YZNNBvkVpinX3pcPQuFWa4+kHpKqlRCXfsZwj0OxBEVzH26p
      urBOvYSQEp2/Q91yNk+pwB+wDo0mFW2gZsaINmfJJerMZr7EsnWERv1DYmt7MnwSDv8w7gdY
      s+YG/H3LQVKmS8a0icq9sqv2DnwLsJ/yq9fkab3j2I7jWmAaMF9vx422kkppQhHNse4Fni3+
      OZQXN1qNUMX34eadEOevJXj3LR/fU0SkCvYgWGvz2FHBSecfUbc/Qp/7Fhxg6xykwc1pxXu3
      BI63vx7gKwh5TdzwxyynYlr4w09TbTuD77Mrz8LzJJfutlAa+foj8RuI2ir9xi1GhiQLyz56
      x8YqG0S2nmHiOTyb+ICjg5vvxDAgGdleTCAWdrAMH53tI1m/xbnVf82hxk8eWdKb3vLvQSD3
      qIyy0SAiWM7217jv19n9Pth2C4vWMDYe4sJUNzeTv0FUlTb2ibh6J47vOrTc+QG6GFRvm4s/
      y4+XfpM7I39K8bl/xUzvb3F9PEJIK0ypA+vKGtfsHzRJLl1AN6sHJqSZ1Fn+4CsW8ej+1yul
      qRrJbXVQHwRCCEQ0QaPSoNZc21sNjdY+lZrPPy08w4X2P9xY+R4mdLPOydo/MNLrMbvgMV32
      d8Y2BvAgnXuWJA7td3/Myc6lDQPCOp2kopJ6dfM9xRPwUvoHWLU8t80X6e7yOTqwSjzxqDwh
      H0ecEph6C6cMbt78/fGwxXGyJvL4GlwliRj7KdFBXaBrVzQL/V/F7joDvktk6RqX5vrpTq4w
      3v67yEaZvuz7lHUDz/cw6sv49SIiFgS6GUMnuXG1hHP+VZ58SlKtat78KMapw1W6uiSGW8Ub
      v0LoxMFCo1XHYXz9HvsyCa0prHooK8YndXH5I5/nZfEcQ5M/otuaZ9Hv5Hb0BVTXATzXDwit
      Nf6lV7FmLpAPF2k7Jnh91qHWIjb6WqcJXTFIR7+Af+lDcql3ePH0Ir6raXqKcMgEAZ7n4yto
      1G2isRDSCJhmPKH5UvQNbEfsGYr8KLFVyN48so7NZzR3n9hOwHtja6MaV0vQYAq9oXRsVVDq
      ykRpQWQ/k6IOWkp3RZnKHV2rAxqifujXcBaukw8nUVggTSZ6vx1EB2qNaQn04Wc2TXJCYJ54
      geLYEkuFK7S0SIY6a7w9dZShwjhmJos59MT9394a3GQ7P54c4Q8S4xg7/BrrNUpLDcnV3Nc+
      sa1erJX6Ho//c8aVvxEo9rD5pdYaZm/gX32d//xbGsOQSAnNBXbNYbUoMFp/i/jRp1n66H9i
      dNTB9xT22vduNl08z0MISEZ86qthHCcwQ/o6YBuGIYhGP41k//2ti5t/613XmpsH1mVPveWy
      dbv85s0N38BHEpE+ptA0lUHVN7HQxA2X7Y684J6Y9PD1/izAdeHV8x00jn4ducNu7nUcQ/se
      o7N/gatCjDOCdpogBL6SRPIXaOaOoe0GolGE7lHKg7/G69fC9NZXefLQJJGlWT40fx899s6+
      ps+9IKTBROZZVqp3aEvtVg5LNZ/vVV+EkYe3nZEIwhsPdrHWaNcGKRHmvfcSyNpFjHCU1Wvv
      YY3/knNnNMlEwMFtW++mH0cgQ09iDp2jqeD46XaGBhZRKhij1hrf97FCEYSUOD44i3WSa8YF
      Rxm4WpI0nd2DeeQQG3S7vy8hOHbfUIid56KGT8WTFL0QUelhK4MW09kWKhHcsWWWCbnr/MZ1
      Gi5eCVEf/QZG296l74Q0mOApnM5jCMMkN/1jyrKTTj3G2Z4JFhZ+Rs2J0J51eHfyc1QHXkI+
      +U1mfY/F+Ut0emMk5l+leuY3HlhWF9luvnvtMH9w6BYtScnGwioEiYhBSPr4jymoTWuF8/J3
      MZ/+dYxs5z2vrb7zY6LCJ7R8hcOHDAb7JY0GawYIA5oejbrAMCShsIH2weh5BiEENU+zEuvH
      MApbPLtBEYCGbwQRA3WXUMbc1JW1wLkH03v02CnMb2VgauO4XD+5bo1ZN1ju2aQOHixwkAlq
      vknScPcgbr3lZ30y7D0BmjYsdnwV415Vf4XA7X9qY7eZ1fhx3LYjLPr9eB50dMJwf4NkQvNs
      5i3kxIfBbYaJ1/sk0wO/T3Xoa8grP913HPfCStcz5IvBJnbroo/WGtvTOPHduamfFoQ0MI9/
      blva6n5o6+jCdxucOSlpzSmUAs9zsW0Xz3WJ+i6+r2g0bQL5JoLcUqFiVXTieTuYnAZbG/iu
      Yn7FQbRE8XVAO4HpHJr+49jnYLulcevxTZ03OC43TUd737TTvFT2QggCr3Cb1cSS9wsV2Nre
      7om1sJrA7Tn9AA8Hqm0EHUkh3SpCrJtQg7aTKcGZ6NukbnwPPX876FUIZLYT/fTvfqzkE53p
      5O+cb/DhBHwwEWK1Gjzz9IqB9zCTwD8GjL5RRCiy7ZjWeleVvObxF2gYYaqNEDNzYaKxCIlk
      hEwmTjIVIZuIEwpZxONBW8KIbgvjCNvLG1Ga6xACLOUxOdUg023iasmqF0FpsKQiZnya5R7F
      jp91aFgzs6+L9JuB3PuZN/btQ5M2bDKiQday93B2BhuY7W8R2c5BlK8Z5xzC+HgufsdI4e+a
      f4L+jhqf672CIVzU+EcbRWf9ySsfq2qcEAKvdZh/TP2X/Cz3R/zsRhSN5nq14+Dy+qcErTXu
      tbfx5ya2HV9WJk0ZwW4q+noklqXXKiToIOLWgFBYbBJ5dBXn4l+jG1X8+QlW8yXe/cij0Qwy
      AOcWFK/fbuOnNwcp1yBheYExQwvU2vePSI+I8egL/m5K/Fs12e3MW+84so4H/nq1aoNYLEq1
      YiOlRGmNZZr4ykcrjVJBR4lkZMsE2XsF8Dyoh3oeqP8gYXsFmcrhtR6hXH6Z1tZ1UUtt9GHb
      CqEVousICIn2PTpq71OYCyP6HjywTERiEInhAXe6v8n//I8/xul9+CbKTwytEWYI2d63+1yu
      l6WZKzx5JtiwHKBY1IRCmuKOXTeFpSF5DfdmBilT0H+S9xfTzFy4g9t1nGJ0CLpbwPcoT6Xx
      L33EyAkPA4XxiczoD461WNoHspit37NlAmwGJdwLAoHn+dh2EIQcjUVoNm1cz8e0LJTv4Xk+
      8UQEhN4xrO1tSwNMv8ID2wmswF0ZW71Gpnud6LeKcIJEUiCnCoiuIIVSreY52rmAyL9JoeuT
      BZZ5rUPor/zpZyaXd30jO6013uQVzJHTe5YlkdEEjabGtNTabZqx24pESlGKa+q+RXyL2KJL
      IFMdmEeeDg70HaFQPIk78ROkeAcRyiKKmpfOzKzF/z/O8u5bY4k3xe57RZSCxtwqDwUS0dZw
      hd1IJCNowAolkEIigEooSkb6SBSIcOB9lffnAkJAojbOaj6O7jxyoMdc95yqWplR4501q8Nu
      satSgsT0a9QyndiZEVJ3f0b6BBxy51ieu4ruO33ggLU9x/EZ2sROKz/YfXNlHn9+Amvo5J7P
      JruGaVtJAkEQ28W7Ldxo/wrutb+lPhL4a+KGh1agVyzwT2MOnwn60Br34k9RS9cJHw72b/ar
      VXKRto3kl/1Q9y0MEcSVfRp4kPVH7tSSg7igexDGmswoJSAUWiiihoshgwpuG+fYXJTWLQM7
      YRjwwtAVznh/F9j2HwAiGue29ySN5l7j1aQymudf0Bwt/w19t/+CF5+YwrQgGhOIsTc/fgXp
      zxi8iUv44+cJn/9faVn6K6xjz+47sUU0QaH7S0zPwbWZFJcy/wWi7zh+oh8TRYu5tkWsAMQZ
      ws/+DtpZC+/zXFRtFtl9Cmc+jt/QiLCHdqt79rUVEk3NP+iKu1uRPahwI3b8d+v9+7WxPYlz
      bel4UL64n40fAuJf9cL33Ni9PWsjV6YOvDOLatZAaSqDX+XK0uieZUekDBKP+vs8zowsboQW
      J5KCM8NL+Bd+fqC+PrPQGt2s445fwZ++STK1QrEQJ7r6Nnplct/bal1P8XL6v+X9tn+BTmRR
      k+cxu09iaYW5/h01iFgGvzCON/5+cMx3iaTbsIafJRXN0aEFasknRPW+LDcifVpM+56EGGC3
      uLx+/YP6xDeFoXsHye0hxH5yBWbrg3paYAm1q8DtVpgmZAtvMDz1f5CYfgVdXrp3B54HWqEb
      VWYbO5W9HXqGXI9DWZvcEjq6BS3u+K/2lkRCgGlh5Hrw85OYYRg+s0RH4jzcYzUVQiDiGXS1
      CG/8JcnV8xgtvVDPbbvOW15CVZcwe4PNS6z8u4z0vkdk+kek0hUyXQajoxbRuN43YHLD4Ci2
      Fzje/9r1UvsPQoPiABNr99Xr2DUB9tod8kGxdca5ShLZM6R6E1Jqnjs2xcneaV7seIUveP87
      4cXL+7dfK2K/+jcgBMqKofVBX9rmNat3l9CN2j2u/RWANDB6DyMMC6cCaMjPdEPb/XealJPv
      MpSdIEIZDBMZfyqQ/TWoisBs6cEceAqR7gLAKt9gZcon6V1AOKsoLzCj1pXG89W+HHYn1o2R
      Owl2MyyejYlwP6K+/3qy+9/Oc3Ij6m8L0W59mM2ICnnfAe2FhOkRvo+zTIggClGjkQZk0x7P
      WD8kMfUyulHZfUOzBlohIjFa/fWdRA4KhWnBuXMabr39yDfEe5QQUiJb2iGRYekWNFY1kiqU
      5+97byLu0jVgUFw1ETffxLr1BvgCal/A6vgTrNGnEVJumHlLjmQ1IylEYN4XjE8oSnOKqJDc
      vuUxftvDbt47kHJnRMB6MlbwY+yy5rOhj4othvStkv5ejq+dx+/1A8af/tk3v+P6q/d5XQ9O
      +g96x04OEgkrBhN3ia2OYa8UscpT2E6wfIt0K2bfKPGFD3im9d2NEngHHpsQpDOC5uwcy8sC
      2dIRWHU+azb9e0Fr/LuXURMfIcMhrGycXGeRRIuNu1TAyT55Tx+FvVwiUp2gtKJIWys4kX7c
      0FGMWA9Gz+FtZlTdqKGvv4oO28iIQIYEOgqJMpw4bpHOSeJpyeykT7Z1Pf97/763EvHWbMTd
      THYncbPx/2Lbuc3poRWMj7nUi5pKWRFPii1FGna3ZW7+uak07MZeR3d2vv8dHzeoV0pBf+sK
      /bwNCK7MjDPe+ifQrNJ74885c7yxryO2qQwayiBlOKzX712vdGGKoLLYqVOaofIvmbj+HlOZ
      X0MMnPpY4/y0oVWg/1jX/57sYAPHj7DinWP8TpjBweukwjPUliehdWjfNjwslmcd6qERGqtl
      6O7BiLdjdA0HOY5Tb2LWrtNMv0Rs7Ec8fdymtGpwsWgTzYSILsORQ2vELiSGZK10ylpm2K5P
      LhFbxJy1J2Fn1Q29hZg3sdWav/281uDYsLzooxywpODoYIhEXLKw6FFchlzbZp6D4wRJTEEV
      O41Zr0PD0USj27Xte8t0W+WpTfn7IHKgq4LaQjuV4v363bbV/ZrtXUSTqFQXhjm+bz++Dlr0
      tcQQCl8Lil4IiaZlLZ/VMCGaMeh2q5Sq45Tsw78Se3T5UzdoW/4BLaM2tYqi4vQiukYgEqc0
      N0muv0l24busxP+bPTPJtOtgdA6Rdiz6s3eYKPTQ2/I601NhisUniIdvk8gsIBJgF/8SMaS4
      0QBbOMi8wqi5dCWDsJfiahPDCHIXEhmDm9frdPcaJJLry/J+HHsr/QTOzJ1Mc3ei1voZycqS
      T7OiEQpiEclAm0Uyud03E49L5u64LM56tLQboMEuK8JpSVePCQjMix94pFs1A8MC9pGl12Mr
      tnN7sQfRrisxWwe9pt6shcYW/TAR4ZM0XfbCvVaLkF9BrM6irDg1swOtx/eVWmLSR+PRUCYh
      VED463butVEpLfC1oL0DtLrA9I27zB39F5/9SWAYmLpJSztkOy2K8x34qRbIX0Ks7TccjTRg
      ZRzdvVkW3lucQs9/QKw2TU+mSnu3IhIVPNk6jRCQzbp8dOMN4t2bLzWc0azbSnRdkmzCEz2a
      aMxcc3gGHuhYLEKjXqNcM8g2fBIbadc7VdWd4sh2D/5ORTU4s538BYJKSZMw4NCR0J52Go0m
      kZCcPR2iWtXcmXAZGjBJDVjM5n3KRZ9UxkD6iXamJ30m79zbJCi2/N5b7NmMtGO91ucWp1pT
      GZS9EJZQ2NrYlhy9UwHf+ff6v2SoROjOq6A8aiK3kS+853jXVpnImvdx3RS3deWRQhNdc/13
      dEHCLKP9vSfmZwlGez/lSiywBmswpEJ7Pln9HtlBDxCEk5Ap/xhr6jUsAe2zlzE//AFhfZGY
      scjQIZ94QhKoPmLtewis6N7KIkAsFiIWDxOPx4gnQiSSYTKZBOlMDNMSGCJKb3eYdCa61t5+
      hpOtVplNhXc/5rdzWmgN2tNEouvSx+4I5vW/ABIJwemTIVIpCULT0ympFxVKaUzz1IvM37pJ
      tLDCwJBAGLuJezOMdN1NttvxtJfnbv0+TZAV5ihJwnBZccO4WhIS+8l/e4tT3Z0+855kNpLA
      nW/SbEJ8R2nunfdJsVWqvIcuosGMxT9TIQ77wbvyCv3DNZoNi+mFo1Tbz2EuXyOS8IKwIARC
      Qqa1Tq1ik5CK0rV3qSWm8YouubhJtaJwnEAUDIVCNJtNLMtCNCXVio9pGkSiu723lq2oVRXL
      i5pYAtJZGTAVAcWiwnVhuemTkJKBwd1upp3fYLtotPZ8buCvkXKrCCw35JBK2SdiQU+3se3W
      7YR/j28toKfDIF/wMQlFMZ54gaT99yglgtxXsX1G7bh34/emWWt/R8hGnJ5QxAx/I4OsoQxC
      O8yjW+W+/YKYznaPUbv7E2LNSWIPuDPnnjqKFkzMxlj0+mjkF9Hp8kbizWcVcuAUN+cl9J1G
      dHUitMatrLA410PKmqJlIFgxS/MGdusQxtIUxZW7iFZIKYOhEYtoNIyUQUVu1/UIhUJYlkVE
      Kiq2TTwRZS8aqHrgmJpEr6BWUizeDHYJRWmiGYPWNgO0Jn/Do7VikEgenKFoNKUVRWnBD0K1
      TUG6TZJICZxm4P80TEUiBcsLsLyiaM0Z21rY++/dSCYlM/NeYAWynFVu3AoxcbvOwLDB6PEQ
      0lA7OPK95tRBuKwgLH1cz0LuCJTbdY9eG/4eTUkJz/dfwFiTrg4UCHuPd3F7Js211j8mWXif
      bK5A6SHvd/soYLT2QOv2MHLTXyUTv4sj25i+CTLbhUrGYPkKjcpHxE5qrFQUfdslHg8HDCke
      cPgoFo0aXLzR4NaiTTJmEDN8whmxy5Qa6RR4jkAIiRVV5PqD/dgi0fCGJKKUIDdkMTntM3oo
      iLax9iksBgH12E1NadUnouHUEyGECALwLl91KBYEyViwnW65oSjVgs3FTXNdxN7Leau3nVsL
      mN2GgT5zrThu70n65A36sg5vv2UALqMnjB0l8nZOgSBwblM5vs+ys7bUxQwfkCT2yRYSCKrK
      xBSaiPD35No7CzBsilp7U/rMcopLjedwPAtz+kP83tOkIk0apPG6RkErBsUFbi63Qi9Bgv1n
      XRFeh9bolTzK9ilk/hDZOYyulxHxNGrxNkbjH4gOShpzHvWig17z3G7N7vI9zU/fqjIbsyEF
      FeVSvO6RMA2GT8Sw1nYFVb4mVIbkmnXVdYJv6Hk+juOh1FrmldYIIVFxzflbAlxJaypEZ4cV
      BCNuteyhcRzF9C0PpeGp06ENQhVCcPJEeBfhBimpgmqlQaNuIqRASglao1SwSblpmjSbTWLx
      KMpX2LZLJBJCCIHv+5iWQSwqEf/66rL+f7l7ryA7kyy/75eZn7velHcoC99otJ9tN35nZpeK
      5YrikruiuAxtSEFGKEKvetWrnhV6UIRCIXJFcrlG62fIHW96ZnqmLdBoeKAK5X1dfz+XqYfv
      3jKoKjTaDjAnAoXrPn8y85j/+Z/ZQKFrWwzc+veUrC1uLpc5NbxB/8DDhkKPTm8f8bTY70hX
      KjGFgqJYPmgrtrVMnBzn4ZmZ7x8AouMszS5nuBq9jLZcpBAYISmvv8ZGz6uYsQsAWHd+yqul
      f6BWheuzWexCns1zf3io1PCRls4UF2+toN/7C2T/CA6XsPN7Tn3cMrRXYkYzkpERRa6wd99v
      3g743mKVeJ9fmg4Up0tpNAZlCfwqXLhg4aaTAEerFRBFMZZlobXGcexOnUiSw1FKEcdJk3HH
      tli+EfHsRfe+AaDZ2dKUXEE+dz+z+PGiNWxu7JDJZGi323he8qza7TaQFOx3a7elTFYhKSVR
      GCGlRCpBJuPuJcJkrsza+f+R+vVvMpC9zNtXbGTU2Hdz7z+F/V58cindv/vd4QeKMOR3NL1L
      gtE+SamkUApuvm+4HT1DIRfx0tg7H4g3P0oMhmvzZdaiEzxf/B75bEi9LviJ/kPWLvxrEJ0I
      dGWDwcpPyIwl9cRDI3V+8YsWZv0eYuThahQeBYk355HL30G5GWQ+xMu9eWjmVClBekKxGYNY
      iTld2Ht+0xM2GxtZGkaTzSkqazGDJ23cHLR2DO2aIZcGq9MlEmPw6wqtFekeuYu2te3jJw1n
      n0+9f7Jq1DQDWeuhlR8Sc6bcUyQKI1LpZHJDQCrtYtt2ovhCEGuN0WaXysW2XZTcA0EfyKMK
      x6NWPsd2801wFMIDXDiImTvoaIj78HQPE8ja2zqmiqFqDHc3NdZcjCemaKgR7JnnqFk2P7wV
      88zQVXrK0aE9Jvs4OglXqUiiRpNXT7+D7xuu3fBYbg3B82MIpZL6A0fh1ObpKbRZXREEgSHl
      gd8IiWcvIYZPPnolj8eJkZjQR1l3abstVOiB0WitUUqhjd4l2gqrGkcoFu5qSr3JSjl3KyI/
      oejNWEl2tWpo7UB1y6ByEntI0rgXsjTbQcyR8JaqrGDjasj0WfvY7i7GGLYWYlLuYep8gP5h
      xbWbITMTFvn8wznNQiSmsDq2Jjs5F/UBra3UP/qf/pf/dSfeOzHhpInWf4YIIkQ/nZlSHqPC
      e/Gg/e+Olg4c+ZAfkYxcYwQxz2FOfwOjK0Sbq1hDU4SyiNieZ7DnIHLzQTa/1nDzmmDTb7C4
      FjM+ZDHQH7PW7KfpjiC8NHptHhE00L1TrOReZDH9Esv1XpYXIny7h95sg9bA04/NABDpHGLw
      GbxahlblfSIRYlkWzWabKEqqvHRsCNsR7AC9Fls1zeJsyNqmRvYI3HzyLMKmoR1L7EGBlRco
      TxLVDMNFSXlEki5K0iVJtkfS3NakexXtHU0qKwj8RDG7uYUwgKWVPNvLDk+cMUc6w0oJCj2S
      +XsxvSXJ7JLF8hrYFngfYfU/TrThkMYcHj6OB40e5MlldnFKAj4orLQn9w+Gg176QV+hm1lI
      bpbmTYLZ98FrYKRD+/3bxM15Zisw2iMolpL1RonjCxwESW+wdCHgutDIbZKZPS04kV9g/Y2/
      RZR7Ub0TZG99l9qz/z0iXUg2nniSePwCtOpsxsGjU/P7ECKEAKFwJp8mU7+NSF1FWoJUysGy
      EkcxjmOC9YQRwt8y6NBge5KeaUlrx7D0XkTogb8OuUEJKOK2IaxFZCJJfqSL/eke1WBbgtpa
      hIwEC9HzyNXrTMw0IdastsfZKn4JMiEvTPwpnnf8ZCKlwCj4wZU+5qf/BUbHjK79F34zf/O4
      K+bhdRJaWtHWCltoLKHxtSIlo8MDIIHYZjsp027syHDQtj8siQ92fxz2g05yz3+QHghPs9t4
      z4TomoOV/SJ+4xe8dmeGcqHN9PA8ZS/EOxBF6mQnTLIqBL5hoa4RRYFxDLVawoG5vepzIrdA
      bNVp3bvJDgPsT0nvJsEegmjqUZWqdImHXsVZu4Esa1LpPcPbsiyccUMwF1MYNqAVXj6ZgrQq
      4seaVmOd4rDCLUma8zppfVuUDOfFgex9V4wBGQqCnicJpv4RZuRlFq79Mf2FLTaDSfDb9IQ3
      6Rt+sAbNL1lcDZ+nfe6rIC3k1iJ2s8r8gs3IcAgYNjY1jZphbMzFthMTek+O1zVtEoKuorXX
      Pd7r5KAODQBjDEbscf4ciPPsu4bDBpHZd4NEZ/sHm0ZdJ7qbUNsdDgb0sosz/Tna1/8ae3Kb
      sLHJzvA/ZXHnm3j98wnEoTPg6jXNuwsRoU7OvxEaWnmDiAU4gteu5rDGXmaq+C6ysoZdsNgp
      PgeDzz64UcbjKsaAie/7qJNglALbhlQusfWFFAgNVecFrJMZ0pe/hWrVKeQgTEFcNbTzgltr
      ESelJN+3VyMghKQ8AqsmxUb++WQCyZZolZ/Bzv6MdK1OEGzTby+i1MFc0X58WRDCNfMK/tnP
      Q9AmvvY6Xyv9gC00a+uCckmwdk9zesyh1G9z/V4AGUPxQAeq4ydcKSCjwkNBAa2PMoHiEK0r
      B7hddrOz4iAo7tPoWAIdMyafQ8dN7MltQBDVI6yNBfq8dUpWQK0qWKtmqdYkc/UNosH7YBW+
      hPUSsvQS6tXnGLz9xxSydd7M/itE74mk2OMTP/PPVrqF/fdToBi/jlWEH5aFngAAIABJREFU
      +yN0yStDKA0r84MEubP0qNfI5HxU/Q7xzO8TtyLijb/FcjXFIYU2hsVIE/UJbtyNmWxK0kWB
      VFDbjBBCsJr+IqJ/KjkXKYlHn+V6eBYx2AfA9fBZ1lZ/zAul13A9uB/3IwDTrCUD13YpiXV6
      SoZyUZLJQKtpGO936SvZgOH8lMvdJZ9qNd51mrXWD6Rgd+5Lvnb7MBxeAfwmQlYPfHb/ye7+
      PUL59z5Llsw4TkJmlp1kDHVssCyxOxqDIMa2D2I6EAK8UYTlYCJAgiouIRZ+TPlCi3YLvv/u
      MIFnkrhc6b4aYg0yfAbnxf+abjZvqfdrLLtpZP743mCPk5jNO9jLf4dltRBRk1gNEAsbVAa9
      tUnca1BOggnSkaDVfhZhAmQ8R9TzEnriJQh9tu81SOdeZ2joFmt3/xOc/pfE2Sx33/gzpp4O
      WFoIiUsKJ6MQeYHKQBBppIHiCcnWdgGdmzwQCxReBvbBSYTtsj3yFb59J4Oz+J8Z7Q0p5gTD
      g3YnSwwD1gJzJPpTnfgKS1s3mR7x2Y1Xd1YNbZKVf2LI4ua8Zm0jJtKGyBgGTkjcfZEmYyCK
      DJYFC4sx2azAsQVhZLAUpNPqmAFgHW1LfchHBAjabT+JQDT0bhbOcRyCIMCyLOI4pljMHojq
      CARGBwgnA02BUCCk5mR5lRtr02ytB4T2KmJwf2RoX1QoFMj8mQPANnEM8/TjKrpRJ5VeQ3rJ
      fVXWMt2ZPkwZwqoh3ImImklthHzhawgvgwl8LNtBN6vE7/4ZeuxldlZvUhrcppC9S2v7HnLo
      FLz0R8wtX6ESf4eJNqQd2KgYMqfolLAmJkQ1nESWhw6enNlnIciu4yww0y/SKk+wuPF/sRI2
      ufN+jNTwzIzLUGGL2fomItcLqRw/3fkdnKU/xbEExXyyj3srETdXC0wP7DA+KDh5wqEbXfQD
      eP12i5mZjlltYGk5ot3QhDH0FCUignobQmUTt2NWl8MjwqCWS7z6FsJNsPMfVHa8+0ocxo0I
      IWg1A6SU2I5NHMU4TpKk0Frv/r6bou7uUyAwYQPq8wivBgLiTZft2hl2nDTt1A0otw77I1pA
      KDAVh3h+E2v8ySMZ0n4dxIQh/p1fUlnzsaSFr32MFrRaYaISlsbKGLK9FrE1hu59DiFVcj+E
      wEQBrF5BnfsafvEZotVFMukt0v57hHdvoMdfRQ6fJuP2MWrdoJ0DLy8JtzQ6hCiAzVsaFWzT
      yp9PaP7iCHvhR/Su/znZzR/C5iwBRfBy7NkOBjP7DrYXYLKSAFi4HjJQ0rQXl2j2XUTIBC5/
      13qWE0OnqMzdJGiE2OXf5MIzzzK3IciwgqX2Os9IaZhbjMjkk+MsLsQszEdMnFBMjtkUcpJs
      RlLICUoZ0AEY3+xBIXZvrN/Cv/q/Qb695+wcmwEQgN5zsPanuE33veBgzH5/RqHrUey33w8W
      2uy+NgYTGHASNoJDsIcYovdcRHoc9+KXEakMIlvanYF+3URXN/FW/3faOz5ONkJ3mDcSjLuF
      ZSnCRoao+DswcO6Qs6/n3iZV/Rnt03+EcDxM6GNmX6dPfJ90UbO10U+j52vIsM0T8s+4NxfR
      l1GkU4rFWj+NusFVK7SzM4TbMUotkR/w6O+rIaQgDGNs26JdF1RbffgmD4RkrTWy6TqNimFt
      M0I2DWfGbAp5ievBj7e+Qmv8FYSQ5FWEjuH30jeJmiF95QFsT9CKd1ieX6GxeYeLJ9Y7wRDN
      Tk1zYz5kbjVkvM9hdTOkv2zR0poL5212KoYwMtS3DFNDNn3FI0wglIWwisDqBwRxjodMQ9dB
      llQrTRzHwaCx7aQjUxxrlJIJVkTHh2i3k73fl+EVINw9jt/dgaHB+GBCcJ/9PdTo2UcyeWW0
      /kQHo6ksIL0IS0rypRRBGOG6due+QxyCSf0u8eAF9PYKcaOGGpraXRGFlBTyG7SCNsLxELYL
      M6+wsTVGeefPaTGCXngHPfoC64uKiyclO40Uby9MYYbOEUcL9EbrlJw51AhIt4G0GrR9id/2
      E0p6pQiDAMeqkXEsMmmvo6ySrDBsbwp0ERxHUChaGAypYIVWqwHpHGUZ8mqpSq+bhRJYxgEE
      tuUwOjnAZibDysb3GepLJthiTnJxxiUOYXYloNnWOGk4c8rh3lxMRklsKXj+tJNAwRFH5AEs
      G+xTCNY6yqY/wAza91D2RYW6OqiUIgyTPlJh0E6QeJZFGIYdUJIkl0sdyCE8GGG6NzAEAtMU
      6FmJ7D2BeuLUI6n8GINp1RGZPAC63UTYzscyz0TlOqIEhAkPq+spoGtWGvxmmvbYDKa6BdUV
      VP/MgePpMKbaGkIM78G/hZDQM8lW7VVSwWXiJ/8IBKyvvcBM/DqlbBstbESujJXJU3v3LUbP
      tTqmrkrIecMY100QnAkQTpJOp2g2m4kj0VnhbVdQciRRVfP2QsCFNlQbgp3BC4h0Uk85H3rY
      BGACtAiJaGCTwzF5NCHDfX2sRh43Fr/P9FAdKQXv3wnoKUj6yy7aGCoN2FkTECnOnnFJqD27
      1ssRAwDAHn0J/8pbyFQLMuKB4U7TTQ504v4HVLYTanI9u4PCU3ieSxRFKOV26NX1AYNIHFpV
      zKG/+3ev58FYEjX+yqNr7wuB7Cr/zjq6XU+iUV4ahPxIgzaWg5j4EiKp7d4n3TuVSZjvlI08
      8dT+9C0AcuIiLbPnI+nqBvg19M4GdvUmraGXdhv/tfNTXLrxPhm7Rbl2ia3FIvSMEsceRrcQ
      ik7C7ajQskccG/L57G6Y3pCAK21P8MwZj7ZvyGQkl66ALo7u7iNGUI8tgvUl1jdWKZf6GBuY
      7KwiAoNP/1AvmZ6vcvXmG2TNPGcnLe4sBJwcd7h0I2RqyKGvaHPzXsCVOz5nJ61OIVCyAhxy
      giEJW5m6B8E1hLeXAbz/Qe0nldr9bp+OCgGOY6GUwHYsbMdCWd3XCsuWnRBod6Pkwo4Zaoc+
      EUKgmwZhTuKe//zH7tT4WYjwMshsCWG7xAu3kLnyR1u1NMja25iaJFVmT8ENNGs9NLO/jSwN
      IRw3cXpNx8+KI4hCkBaisoKJIrBs5Pp1StW/oWBdpdrzXyGHTu+dczqHipqcLM9xc2uCGBuR
      KxEbl4xZxE3rDvanQ4rQQV5qk9QHSNH9DIKGIagZ2tsx9YpmoGyRzSWVaYW8YXMtoO0NgO1h
      tCZ970cEjR+Sya6wvn6H2fnbhFqRKzrEsk0k6ggV0Wxb3JlrUK3UiDXMr0SM9lusbmpiDRuV
      mK1KzNSI04G4dCyV+53grpgwoP3+/4HKb3R6Y8UHHlT3Ih9qUBxS6f0Zu/txQvLQ593vki3v
      O14dTPM5vM/9k0PX8KiL0Rqi4CPVHZigha6sIuw0mbV/Bxh8TgAWUf+LyOIwprpJX/UKPXKb
      AblGgENG+qRFm/fuGWam6sytpbne+3uQ74fIRy6+jh59KWkIsv94zSqpq39Lo/cpDBJd2UBm
      CsTv/YD+sxnK6Tnma0/Sl75LqVhndWMQP8zgbt9mqgfSlkQKQY8nubsdMjolqdUMOzuaiSn7
      QCDl3nqWufYk2WiVscI6vaV9kBxj2NkWwAznnzyLUpKNjSpy+UeM9isaLUOjFVPKKxxb8nc/
      bpDPSNKewLEkubRketRJzFL0AzrEWDZ2z6vEzb9CWHtAha7i776+D+G5//sHPD6OnNF3WSSO
      L4S53yvQVYg3FjBx9OiaQMeIkDIBH36UbZ0Uqm8iebN2gSg9QNx3GjBIDJNL3+LlwlVGJpMC
      lfsnqnatTbEgaWnNDTcNtoNRirj34qFWtQAinaf19B8gVu4iUhlkzxAm8LGf+hI7o2fZrq4j
      RgZZ3Fklff3/JrILNAaf47fL9zg5aiOEAgS3FwIGR8FzBa4bEwSG+bmIsfG9ZzfWW2PMXEpM
      R5LtIJmEwVAqG1aWb7C40Eu7XiMX3OLkaOKD5DKCbFohhMT3DRNDipkTiRUipeTGbMjlW21G
      +ixKuaOiQN0LFgI18izxe+9juIaw92E4xV6Ysvv//YNg356OfYj77fq97Q8r//1cpbufx2Dq
      GdwLX4THCLn5SYoJ2nwuf42+3LvsVL9LO4BWTfCVC8H9Zj8gduedLqVMygowlTVEtpzkCYp9
      xx5LSAmFHszdtxFhEzHzIpx4IskBlZJkWFxZYzOoMZBaZ8dOoSPRsbeT57OxXYceQbudwBog
      YaC4/zybzQDbttBxlCRMtcbznM7caSCIKTV/ietBuT+ZOPfrndYxrSDCshICtNnFkKYPlpQ0
      NFxfCHnhjPXgHmFCCFTfq8RbY5jGJcitgtwX6dkX338wFeL+Wf04C//BfQkOmT6BguokqS//
      C7Ccj2ZHP+Zi/BbDq99nZqyJZRnKuRAhBNeuBgjRNWG6ftWekmzuRKiCQqJ4d3UCMzz40Lgo
      kSkinvjSsd+r8Qvs5HuoOB5m5R1utkPOnPAIIs3793xqFvS6Et8PCAKfWtVmcGSPH7SrH0EQ
      4DgOjWYdpSwcxwaz50t4sWSoVx7YZr9sVTRXZyMunvaQQrK85XPylIUSFsOW5N5CyHb1CDj0
      /WINTqLKQ8Q704Qr/4DgdjICc0k6/DhKw+Ola8TskaZ80LYHlN+AaQtk6uvYz7/ykMd8DMUY
      4p01ZL7n6H5f9XVebf0pp8erHZaN7koqsWzZUZaO0t+nINmMpL1qoAdePjHLj97/U2qDLxBL
      l6g0cYgQwGiNtXEbEbUI+04nOYNjRAgB5RF0FBLc+iUvfsHl9nLAT2+3eO4pjzGZ2YXEZLMp
      crmYO3cCJqYVVpKkRiDJZjPYlkUmnUZZVlLGiKDLD6TRJA2O9mpDRJIhRSBY2og4NWGT6liY
      fQWLVkuTzUTEsUWxKFneiB+uS6RwPFTfGEp/gVdaC+TSgveXI+aiiCAPwkpmFhMZqINxDcLb
      C40etvcfjA1/0Gpi6gpV+n3U6Ifv9Kgb1aRy6jFZLWSmcKTyG2OYqvyIs2OV3dtojEDHguu3
      AwLf0GxDJnV0HZ9rS071OcyuhUgbTpWWGen7FlrHLG2k+EX6n6NLo90dM7TybX6j9CaWEry5
      cIkVOUVz8Cmw3WSQdf0+HUMnxBhvLiFbVf7ilkR7yfp/93bA4JBNLt8pWkcjlWF6xmP2bsjk
      jN2ByGgcJ6FLT3U1uKtOnWnTCBAmAVGKjkObsEII1ndCLEtQLuyFmGfGHL7zRoNnn5IgYlZW
      NRM99sO3SRVCYHrH8df7EVGdtd4v8QX5A3RQY7mpMRpkDE9MWlRbhu+vh/i5D95vckkPr5BC
      PYE1dv6hf79furH4x0KEOD461KzwRObmPuU3SCyu3wq4OJUik/rgcHB/2eb2akBFa2Zm3M6k
      I5kYDvCX/5Y7tTNUcqcwxWHy0RIpLzE3fmNigZXluzjrP8NXOW7rSdbcSQb9O5x3brAU9XMv
      HqE29xZhQWD1S0orglefz+DYgqXVkKX5kMERG6kEAoXjaFw3Kad0XYlBd+Axu83mwOjE0+zk
      TYwnuDrnc27C60SIBGtbIdfvtRkdsJgY2UuQCAQ7tZjREbvDYBHT02NY3w4/XJ9gYTlc1i/x
      RefvaaWmubW9zNcn3uHUAadYUC7B1yz4m9UA0kATSIG4r+rfGEgavSfD2wgDixKKZyBSgEUc
      3UKmGmCb5J//GFGVfFoiFWFMJ+4uEcZifilisGiR9hRb2xVSnofj2PuK4RNTMwwjLKWwLAtP
      Saz8frxX8vrMUIXT5ufs1H7BtfkJJoubBw4fh3BhwuA6dV4yl2j5l/AcENJwPryHkvP8Mmrx
      2mri/NaFwenUAg8P2PT3WFy+3aZ/xMJxJRiB0THvvGvI9WaZGqnjugZE1IkeJaemtU4qCYQg
      imN6SjYGiMIIpRSzSwGfe9JNJmNlOp2DBFFkuL0UcPKkk3hDQlIsGJrOg8Kg94lp1cHL4A+c
      4/2VWZ6o/kcuR8+xtgkDvfvNlmQQDPUqLm4o5tY0X5h0eGs5ZKGwz9ExQM3F8DlUaRzd3IT2
      DYw0WP0vYw1OAqAbFYhj4spd4vpfYlq3MVGAsH4NK7n2iYnjA4m9eHMJWR5CAP3bbzE4ZFhZ
      Bb+hwWhOjrrkMoogCAnDBIHrB36Cveogb6WUSClpNpukUikGyxYr+7plRlGMUooojsEYSnnB
      i/m7h85NWhDFCWGIEIL07pwkuLkY47iK0aJNZtFnvK248MTBZ2VZgosnPW7eC6iHEbWGZt7X
      bJS+gTr5Iq07/w/PjM+TaFWM6DA77FUZCnaqTd7aiCjlVMdskvSVBbVqC601nufh+z6WZXHl
      bsjkjLcbKBQiyUmkvIf0AYC9eLXlMOs+x1PRMsPxLK81X+VrjZ8cIqmVUvDSOZfnAoPjCDxP
      8BezbeJ84ivoe704T/4uqm9q76Hrlw6n7DNJwbpIZdFXvo0obiRN4UYfH86ejyJ6axm9tYRI
      5ZDFfnR1E2G7DFfe4BtD79BuCVQoeebUwRVRCEFvby/tViuphW23yWbSCCF2w4lCgG1bpFxB
      fVVTLHYgD22fdDqF3/Zp+z6WUtiODQjiOCKfS3oNSAuarYBM6vBqPD0s+IfLNlnd4OsXM5QL
      6sAj7SZPpRScnnAJAkMQGQZWA96oLLADzBW+zEztjynkzIEsdtJ4I4kWDg9bNHYsXBUy0qdQ
      KlkZ2u0Az3MJgoBaI2arasiXJI7TTb7urXhKqqOhEEfJ/n5RorrGDJeYKm9yLfUlrq/1MJ2a
      xbYS4Nx+J1N12rN4rsBtwFyk0cs27rP/GlU+yG/ZrSk42kk1hEvvIPINhJ9DlmfAb4FUj41T
      +6EkDlGDkwhlIbJFnEIPX935OeMpSdMfZmOniIrXGeg5OIcplcxujmPj2BbpdArbTmxfKSWW
      UriOg5KSIDSst6LdxhJhFBHHMYYkju56Hq1Wcxfm4HU4SrY2W/S4EiFigiAkimJabZ8gCGm3
      W+TTkm+Kf8xi0Mv53Pwu4ZXWhq3tbaSykkIpQAiD0SFpN2QkXeHOZpZ48AzzO2VK/l2yKUMU
      StY2IJsRuyhOz3PJFy0WFuH8VB7PdXFcRTrt4bo2S5uKaqjIFmwG+ruFMweDAkIcgwX6IBG5
      Mktyhu1Nn4n6T1ka+joLqxYzmTlkJ3F3iAZbQMaT3JuPaIce1vjnE+Tpwx5TSkSUxTTfQ4cS
      ZY8Q3XgDU99B9Q5/qPN/HES46eSa3TS2EHyhEPD8iX6USpHJFLHsNI3KTbarIeW8OpJV7fjJ
      JJGNSkSgwEslz9/pDBTXsfE8DyUljm2TTqXwPHf3iVaqIT2uREmDMZogCDvAxoR9o5BRXGlP
      UBl8Brlyk9FC0mzbmKSNUhAEBGFAHGviKNoFRKZd6I8WuN48gek5wbw+xeKi4eraELdq4wy7
      K2T2RWjXVkJSSEb7Ej1KHOdkhZlfDSmUJKXS3sx/f8j+WDDcw4hxs9Rz04xWf86Wn8cvjiM3
      5xnIt5JdCw4x8tqW5NyQBW2XtdILH2oAAIh8H/FaHewy1uDZJB4d+uCkHi8ezw8p407Eb5Xa
      7FSqrNz6E1LmGo6+zdSIRblg8ebVFpaCTOrDIUvj2LDeSBpldGWXDUTs8XuK3RBkIkGgGMp7
      OLbYLb5xHJt0ysNzXWxLIWob3Ek9zWpQYoarpBKHASkkqbSHYzu4rovj2NiWheM4yT48uPrW
      dSLLQQycoV2YwPYXMFHEqnue9W2LzYqg2YgJtw2FUpb5LYv5isv1ZZvRYpAQbeUE12d9+nqt
      3SDAnpgk8MIxcOiHFiGYbw8x0vo5d7L/hDd7/pB49t8ymZ8jm80QBAHKUliWQiAJwyQ9H0VF
      hoJNVrwPR0UuhMA589vJG6UQ134CT36V6O57WFMXEOn8r585ZAwX0nsEt+WCYGAfJ740YDT4
      AdyY8zl5wn1ojs1iTuGswvJCyNDoh5mMkqKb1ANo254arHF55S1Wep7hveUeXs5sdNChoKRE
      OUliq1sbrjsktikXXhxv8IPNVSJ5A3fnOn3yLdq6h/WeL9Byn0/OIAygpw1uGhAJb367wc7l
      /5fnhrfYroY0GoYgSMxvgFYr2C3E8v0Arc1HXwEgMUsavedpRzYDO29QH3yWnewTeIuXSNk1
      oijGGEMcJxyVfhDiODY7wTSNjSbN/qmHzx+HPmJnBZpVTOAjUjnI9yOzRWjVMa06Mld6LDq8
      fBh5KevzQi7AGMPs7A2K7gKee3DG3tyJOD/lkc9Irs76OLbAdR5s/iTbCgbKFlvrMYsrIUIl
      erR4Lxlwrnf0PppNTV/KwnUO6402EBhwFFQ2KiyUnmc5dRa9cpeyvUEYhrRafuI3tFq0/YRh
      WuuYWr2B5zoMlC2KZomUvMxgcRW/EnFuJiS98RZBtUE7N4mwLITtJmZixz8VtsOGPcbC7RWe
      O9VgeMA+cB/a7cTsajZbCW1jGH28AdC9iWF2kJo3hnBSSMsmlMMMmOv0lJPZyPVsbMfC8xyM
      1ry3UiKYfoWm/RArgDGI5euM3PlL/PVVno5+xHneon77No1AIfrHkdkCYIhXZpPaV9v9tVgJ
      LAzfKLZJK8NOpYapfPOQ0wuwtBYx0m9jKcFgj83aZsTGTkwx9+AAQbUec2POZ2rY4cK4h2nD
      9WsBr5xJ40QwvxShJXjeQf1oNTUqFESxodnWu//qLc1G0xAFmnZb45o2N9cddHmM7abFSXkF
      JcGyukC45NyUSihzjDG4blIolfMk0ZZGNg0YKPZa5HIxg+4SG2uCID9+5DWJVJZ2cYqFd24w
      lGuT8gSb25pMOslQ27aFZSuM1rie8zFNoO5BhYBsCYBAG5atEtcrJxnovYGr1J7zYQyOazFU
      rvOmWzyU/zXGILYWKTeukaHCmnuadv95tBbMD3wFvb3GL8ovklI+w/k3+Yb3PS4vVFjKPYUs
      Dyasz/UKemMRa+KJQyHVx00GV99jcWOFRQRRFNF/jJtz/0w8MexQb2reu9Xm9KSLax/8XhvD
      nYWkf/JTJ71dk2m0z0YJaLYNI/0OQ702cysBc3cCykMWqY6zbIBmSx9qKtrN3fod58+Vhq+I
      7/Ot6jiB8HBTabLdJnzmsJ+4/7XrSM5OJxf8y6uJEy0QxJHAdz6A2ymdwx0/TSH/S+bXBKuV
      FL09Po6jMBgsJK7rAUcQY31cEUIgciVSWzu76L393xljmCqs897OXYLyzMGN44gv+v+WyfGY
      WkPwV8vDiAGBGE2qk2SHr983htuqwPzadb5c+AUXW+/w1upJVvpeROTKyJ5hjI4fu/qA+2U5
      UvxW8TK9ua6mHX09R9VfZNOS81Mel2+3Geqz6C8lzmAYGW7MtpkZdcmkDq/8Q702795o0VdK
      nN+JIYfJYZfr93yWVkNKA4pGQ3N+zCWf+WBzs6+l+c7qBkH/Kd5YneCloTs4ttzN8O6fo46a
      r/xA09CagoBKVfLWvWmCp848GDksJIuDX+HfrQwTpvs4mfo+cIu9SFBy7AcXxHxMuVX8Oqml
      v+fc0Cbd0FRi8AtymZiXmn/F9zd/Hzq5ANOq0b/5C0aGEr/hxkKacPKZQxeqa9uITAFZHiQq
      9PI9/0JCe50zEBuenP8PeOkapT6Xt+72sT71O8gjmkU/DhLmh2j5AnIP9pT88OgCIscWPH3a
      Y2455PXLTZSE0X6Hc5Me9jFc/gBhtNdQoiunT7hMRQ7LmyHCtsgeMXiOkrQnyEbbbCuLywP/
      DduL3+Ufj7+NFIc7Cmlt2NqJqNQM1WZMSxmKfYr+EzZhYLizUiZ4+vceCjkmhCAaOocAoq2k
      Efd+6YZCP7YPcJxEXolF90mWl0KiZpueTAux2/ZSUEwHnDSXEKt3mKz8kIvmx/TpOarVmLvz
      mneqF5Bj5w5NC8JN7a4q2VvfIbX8Fq3+C4g4wrr6QzZ0CV2vcEdcpOkOInRI68bPCG+/jtU/
      g1A2pt1M9vWo1xA7Hr1b7zJafHDv4vWtmOHeo6M4QgiKWUkUG4Z6bIZ67aQT6ANkZTNkqNc+
      lEdQUqBNorgpJ+4Ulyffh2GMVIeL4oUQjJh5rqzn0IUhanY/5coV8m6I0Um3eSmh7RvmZkOK
      rsXUoINnS4ICWI6kWlNc2TzLxsk/4KNQ1ovaOk8U54/whz5uGPSDDux4rJ34LVajgLtLP+Kk
      eIeJvgaOk7ACZDOaz2UXOiuD4a13Ip4+Z7PdDtGp8aSn1zGMFEII6ie/mhR42y6kssS/8U8B
      WLqvyZ3Xf+qAgWn8JqYZoXqGDu33sxTTrKJ31pE9w0lY9358U9BGhHVWtwJ6i/tbCO1fESSe
      Kwijg43v7s94xjG7gLQHSRCaIzq57IkAYmOo1RukUymEFEmEr+2TSqWI4pg4jkmnPRzbZqsS
      sbkd8rL4Id+LTiNSef7L7DM8cesfGC1LtI5BKvxA88xJF9vS6DjAkyF3b0BUGGbRfpZw/ImP
      HOGruUO0fPZhltgFB34mRrKwHNZGvsJa/Hl+sX6L8eAtRt1FloJBApHlqeINTOiTy0CzDcsr
      Dt5YALO/xIu3idwircGnDimIkCqJt91/vKM6PO73RQq9iCj81NitH1pSOUSXR7NZQ+R7Dnwt
      txfJyBZ+KHj3Rpvz0w5+qFES2kGCsBQIshlY3ggYHbSA/d07IY6TtqU7tYiZExaaaA9cdt98
      HWvD1dk25yYPe9uGhP5+fjWkkE0SX612G2MMlqWQUnbeJ0C0OI4xtmJlK+TkmEWtVee7134G
      Z1/GnLhIbu41zk9GNJsxUhqktBBAo9lCSsmtez4bU/8zO9lBuq2dPqqE+VHWajbjXnQwG2yO
      86o+BRFCgOUQDZ3jNue4FfhgJ6WMy9uzTM//B77wVIw2gsmBgC+PfQtlJTUWc/ci3njtXdqf
      /x8+EYUVQiQ9wqRMCkZ/RSIAE4XonTXk8MGAgIkjno1+wvnpxBQZ6jW8eaWNpQTZtCDtSVqy
      Ux4iYLBPwa6SBmzsxDRapoOWNIx1Bkfy6KPO0fdKCgWCOws+J8fq/aJDAAAgAElEQVScXf9g
      j4cv8THmV0PyWcVIvw1YCCk7Dei6jrgAoXd/b4hp+zGblaTg9Vz9x8wt52gOPYlTKOGldrBt
      CynU7r5ubhe40hxhu/cMUWEAoT+B553K8sbmM5zQrx+A5Mf6U3SCP/Ck9rV+DEoTXJN/hD/3
      I9ztu5S8kNnZiExWEDUET53wqBiLy3GEUdYnM2u7HqZRgY/Ky/NJiBCIfA+ycERYTyruBKO8
      f3ueIDRMjVpMn7BBcyAT3HXujDHUm5prdwNGBywunnK4dCPgzISNZSWmzTvX2wgB56YchDBY
      KuHK1Dqps13ZCpkeU+gD0PbOKwM79Zjz01aC06fDRCcTRd8/Re++NIJ621CMwXPgN87B0NK3
      eGuxxc1miVfYRihDo6W5tF7gpp5hoe83MH0dP+/hu+R+oKyVnmN583WG+/acbyE+wxXgg8QU
      BrlT+GeYkRi5MYtau8nX3Td44awFAjZ0GWHZSVOIB8zaxmhoNxO/wOhj61dNdRORKUKzCh3I
      9a9Cjht8Qggqvs3dtRClYKsac3rCZmktorcoqTZ0J9GV/H67qrm9EHLhpIPXyQtMjlr84kqb
      6TGb9e2YJ0+5aG24ejfsQFIMriNQKnFG+0qKn15u8+KFw4nEMDLUGmYvZs/BDjRdSTKsCd/n
      6lZEb1FwYigpaDfGMFC2EFe+xxvbI/zsXpFZPc4t+wnEwPCujb/r6VTWMc0qcmj6491kQGQK
      3NkaYrhv+QAbySMzALoilMIMTBP2T/Gz9T4GGz+gNx1RsQY63x8fCzeNCtbi65jaNjo3keBF
      Tj0PyknKmIQAy04iCbaXmGCPcEf4aOA0t2/+mFefiBNltaGUl1y5ExLFhpG+ZDWIY7g2G/D8
      eQ9L7eUF8hlJMS+5PR/Q5fRXSvDEjHsfMjL5vR8Y3ni/zcWTDpnUQYfbtiCbFrQDg+ccv2K+
      c82n5RueP++xth1xbjrhA+0eS0qN5Rg80eS7ff8GpOr0YjTJ89pZYaR+icWBL4Cb+kQLn+54
      z/Ns+6/x3GQgr+/IR28AdEUIwVb/s/zHS5cYkbeJ5MbxP65v0Lv8J6TtFfKRYMsM8Zujtylm
      4B/mFliQk8RugYYskL72bXRpGD9W0HsChk9+dhf1IUUU+6k+9wdcWvke/93zG1gW9JYSPLwx
      8LN3fSp1zfJGxIlBG0vB65fbuI5Aa7h6N+AbL6c4O+nxznV/357NvllwT5mvzQY8d97FDw2Z
      1MHcw04tpuUb7i1HTI1azK9EjA9ZuytCvWnIpJLWScW85Modn5GBrl+i6fICGTRKwFR6C3v1
      J0QGyqLCjJolo3wGyoJFBH8Wv4xIlz7R+9noOculpZ/ywol1QFBvfMph0E9C/J6LrO+EjGd/
      ybVrZdTpF9GVVdi+gSifQxZ6sVbeYmhglVbd0BNa3IrGKGZ3sJTht6buIsRd2oFgo6YYeCWm
      0lrl3VmHS87Jhwbj/SpESIk1PM1yzxB/M/ctpqP3sCQM9Cp6S4p0KhkQA70OC6sxl276bNU0
      X38plbSn0rCyEaOkIJ+5n3vnoJ2/WUlMmo1tTdqVlDv8AcYYNiualc2Y5845vHc74NY9QzEn
      ePtaAryL4sSUavuG0xOJf/H6ez4XTtv7DrFHXfLUaZdb93yeL/+MbFp18hJyNyr/5koBej55
      AgMhFXOc4jmzRhQIfrh29tEfANHw02wPP0X1l/8eqt9Gt3+OCQH3DGbt/0TYZ5kefxckuGlJ
      rRHz3566jBQxIHdj5ykXxtzkIffZMV8832Tr0ndZjF9BDzy6qwAAbpqr7gt8LnuNsQHJt3/e
      4snTDu0gaUqdy0jOTnZbEQVEWiSVtHbSM/nOQsjTZ/b7Qp35v5MaieOEOe3JUw63F0LSniDW
      hmbL8PZ1n4lhi7NTdgKBdgX3liNOjXsM9Khd4uT9EOxb8xHD/fvaU3XG255fYZges7k9H9Fc
      DChkFX1Fh0xK0fLhDfvlTw3Vu1V6imtr73GlfpJ2//Snlwn+pKSbjdSD5xF9TxItLyKyg1jn
      fxtW7nKi+B6ZQte+FFQrml5LEGtxAOuyf8kXgJDg72zwTM81ZneKRJmBX80FPqSITIHtO3Pk
      9DYDZcmdhYh20J1x9zK2KxsRgz2KGMHyhsGzkwL24f7Dc50QsL4d0/QTWpJCTpL2JL98z6fe
      0kQazk7ZlPbV9ZYLilJBcGs+YqBHIY+oOltciynkJJl05zvT/Y3ZPa4QgnJB0d+jEBLevt5m
      dEDyvcUx5ge/+OlF5hyPOesJWuVTyPrWoz8AuiKkRHhp1OgFSn3T5HWbdnGaHvMWtqN3f2Nl
      YK4ecbeiqW9oFtZiUo4gdV+X8rXNmFpoGOgXsHqH7VaaUKWh3Uiowx9BmMROzwVuNAaZdu5x
      YcKwshEz1GftQhuiGCoNQ29JEWnJZkVze81hOe5npZ3HFhGFVLIKGgN3FkPaoWazopkesxAk
      iv30WYfhfotSXu7WdO8Xz5WkPMH8Skw5f7gKrb+s2NiOCSM6k1AX+al3lX+/LK7FnJ9y8APJ
      N6PfRGcONAD+2GLiOAk5d2vaO4EQoz4hOPRnKZaUuJd/RGFkHL00T0uFKCtJv0uliKIIy7OI
      aLHkuMQtxUAtpFw8GA5NuYKdmsb3FecnA6Irf8Wwmzh1K/UzVKZ+k1utIg9mLP1sRUhJ0H+a
      P6/38MrCX3F+apXrdwPyxRRLzSy+tqkurZDOCt6oTnPHPU/wVNIZZhZ4e/UG/8b5/8inYauq
      0cYwObKXVzEmweQ71p6/sL4dg4G+ctIzuNU2bO7E1JqGze0Y24LxYTvh4tmlHUlWip9fbvHl
      F9J05xK5r0VUGHX20zCM9itcW/CdxUmCwclP/I4fO5mlso/fAAAwWuPYNuHOBiIb4/thZ4YR
      SKmIogSYFQQBUUshXAF4LK6GbNY0CJhvRGzYBnsRymnJ+KikXEoQiXHT4cXeO/zgfZ9LnEbk
      ej7wnD5LMdlefuT9K15fu45ob+Kri5i+bNKpsVjjso4xI8VDEIKwb5o/mX+e5k6NMNXDE/Eb
      jA22sDtaIIRACsHKap10yibSsLIu8OyQ2QVNpJOC974i9A/ZjPUKFtcCXn+7iVQWZ6ZSaK2p
      twzLG5pnzqV481pAX1FyYsimUotZ3YyJYpM48z0Wk8MKxxa8v5rlUukbn0pTQ5M0uDi0byEe
      gyjQ/RIbiJ/6MlvNCu74DDn9Pql8wimpVBIi1Bh0rFGWJHAM9TAJxw30Kr4528LrEzgDEqst
      SGtJf6/ixu2QQl4QhhC2dmjU+1lf/m4yeHIv/qov+5AIyyYYfmLvffdFOn/w/f5tpGJj/Csw
      niSZ3qr380TlLxnp2YuFzZywefdqSKUeIIRmpNdmqKwY6UuaWCStbi2iMMSxLYbKhvHBFJGG
      195ucnoyRSYlcGxDPqu4cMYiaoe8d9OnlJfk0oKMl0SxunJ9I8Nfq3+OSX061JUisbuO/O6x
      GwAA29pC1+pM6L8jU9YYrVEKhEiIkyRJoXhlJaZVM6AN56dslASvJbE61pC0DI2qIQgNW3XN
      t17z0b1gmWXe31pC9rRILf+SRuPcLkHXr4OYKIB8DwjB9Ttt3ruuyWQE7Zahp6BYXI/56os5
      bs35nJxI6AS7qE9IJhvHdQCNlB5KSRwDuUzMiUGJ1SFLXl0PGRywSWUkF08nCa23r/qMn0vC
      o1EMP58v81rud9HZ4/sSfOzr1Rri6FCrWHjEBkDirPCBITCxvcjpxrcxQYjfirFsgbIOLm/t
      OqwuR/SeVaysaF5732ehHaOmQXbAXtISzNoRt2+HuGMCe9fhq3ePRDa7Sm3lFnL62U/4an81
      kpgDAAJr9QauYygWJFPjFu9cCSjmBRfPZJECwkgnjGsSwCBV11ew0HGCpFVKYVmCW/MhT51x
      sSyBMYL17YjxEYV1X92k6Ry7FcBfLD/H7MAXP3UiA9FBABwlj8wAMFFA9Oa3UWdeQOR7j12y
      jDEM117nhYklolBxd8FQbxs2dEzPib2IRNAy5MckUgncIclNDbKokMKg9qGsnJyA3HHHgrWr
      EpX+CdqWiMGzjz//UBxh/BbSdsixw5lT9i5tyGC/olyQKJkQykoM1UqrA6FIMFlKSowx+EGw
      y9kvpKLW0MyccKjHFpW2ICTCc+SuY92FYkACzPuLlc8x1/+Fz6SRudHdKNDhgfbIDACUjTsw
      SFjdxDheQntyhIjmDucz1xIwr4w5OWmxtKKpVmO2FzWlkWQQFAcF87cMXgEcobtloElBd2yh
      hMGVxwO6YiNoaYvCE5pseo2ta3+HF/wN7XaZuriAOv3yhyb2+pVLJ/MlswVMHHPavb2r/HFs
      GB5QzN6NKZxS3FmIGB9MEolhGGJM0vM5iEKETCgKk6yKodnSbFYM33m9hZ120AZcIupNi2xa
      HFD+Qk7xn2YvcG/sC3xmba2MSQIER8gjMwCEEOiJZ1Ef1GAvjlha0pRyyZK8tqZZaCeK39jW
      rN5OTCJpgbD2YK+7xwHSKiLSgsiI3SW6HXebLSRZVEdEZFWIyAAGSifbSAsyrFBorjD/xjbO
      0BA6P7nLTHeUjflIiRB7iEuluOK+ypP+37O+GbG0HOO5golBi5WNmGJW0tfbuR7jEQYxtqt2
      Z/P9xUS3rvrksxKlYGImDRiKUnFvOWBhxTA1ZuE6giASXGrOcG/ky5+d8sMDJ6pHZgDsygdk
      AE2myFy9jwtymV+8F6IGFG4HTp8uSlL5ZLaZfSfGHjx+P0oY2lohpD6wGgh5mNIRkTAi727r
      wGD5DVJpQXtbEhuFjj1q6S+hh587tKwnCaBHJNm478Jq/Rf5u9VtRtd+wOfOuwmYTQhuzIWM
      D9roOOn83p2S/HaMbUsQdJjcBEYnlWkJ9SH0WG26ia/JEZsohneu+zx5xuHyUoZrJ/7ZI5Vk
      fPQGwAeIt/hD8t49bs8KRK/C22e/CwHNmmFnwxBJQzb3gNpWASkVH3h/1OujRFqCdGfQpYqa
      pHIjJBv9DWtzawT9n0ekMnvOnTFHxyV/xSKEYHnwS0gdc+3uTxK69IZmpN/GlppGI6Td9ikW
      swR+RCabolptEAYhSqndxJZEs7ZlePXZDF368mT/CYz6wozDlVshr8kXPpLNH++sIws9n8ok
      8tgNgJAcPTOKSlOTyuxh34UQBE3DVkWTHhWkjnB4Po48TFWqtKA/+3Paq29Sa08SnP2Xif37
      iNM1LvS8hL76M56bMWRSiiA0NHyBJQT5XBbLSkyfdjtIegakE3a1MIhp+236Sm7S5OeYW+S5
      gtjOUA3SH0rhjNFgQObLn9oK+oisyw8vcd855jdP46S6uPg9n2FnXeOVP5gT89MUqSBdDCmm
      biQll4+DOCnExEWmxyxOjiuGByR3FiMyOQehBNfnAvxI4HqSdNYmlbGwHYGXsigWs+QLNuH/
      396Z/cZ13Xf8c85dZuWQHA5XUZKpxZIcWXYEOXFcGEkfgiROE6BtgKZFChQompf+PUWfi/ax
      DwWaIilawEDrNo6c1JHhRZStXeIiDoecfe5yzunDHZIzXLRxncv5EBZgDcm5d3S+55z7O7/f
      94eFfsrj20DS4CSTz15eOxBizfdTRpGcfaDnBCBSA6xM/SlLpQIg1tPajYks/aynVCu99Hu+
      xP7FToGpr+7J+5vAj0pB9wkhBHOj36Lcskglo4zQwazgs9sBH/y+RSYtuHkvYGmlu0hXWtF/
      jmUYG4IHC4bOAou1EKgxhlP5ALu+tK2L3XNe5cvf4FPoOQEACDfJYvJ7BF5nRAKGhgVepe1I
      8LTpaJesnSU9rb9xs5JE5vemcYdw3P23eUwPUmpunHHMTDucP23zh99IMT1uc3HGoVLfWqVu
      jOH6Zz6LpZClcsjdxyGeb9Zfg7YLByC2MyAw7VLIpyHEvp0X9KQAAMzYeZZK49Ey2b6N7LBE
      r0D1vqb6cGNwekUDcwZv5fltBmpVj2rZQwXg+5rA13itkGYjpFEPnjofKV9QGfj+0Q+LdmCA
      Rtgtsk77RNsWhDssQrYNl846XHnVJpsT/OdHTX43668dOAOQSQpON25su5KZZq1LBEZH6S3d
      37Q/E1rPCkBIyUr6HUIfKuUG9WrkMz8+YzM+LdBNQ3lWY8/DWxMOV8844D//MqqUIlQh9XqL
      MNDU6i2CQBMq1W70sP3vCj3BQvgeaqK3UieE7fJ7f+f+y0lXsFhS/PZzj09u+axWFdpEPkSd
      k3MuK5koSBSCUsXg+YblsuLu44Az+ibW/CwQ+R6tH8zl8t2pCtskr5nA38X2aWd6LgrUiRp/
      neKj6ySsW2htCFo+GJ9E0mXsjCFckbw54+Amonh11ghqZYM7IHY4h9moWkqlon6zVjsCIqSL
      MQbLWrMo3GruCrBSew1z/ltHMer5TBLCe+rr715N0vI0n94JuDsf4nkG1xYo4PGiYmosCkxI
      ER0yPllRLJYMCVcyMiiZHLf51X0LAejSAqgQOXZqvcGFaVYx9TKyML3lvTt9pPaSnhaAsB2W
      Bn/MTOPvyeZkFKazbaQgaoGTkHi+wU1E2YzXLriUSopHy4plDO6gQHbsUtaGNRjchNUxwKOi
      7adhDCw+mCa4+MOeHPyZ4k3eG7ux4+tKGT6+GSCk4eSkTX4w+jz8wPDxZz6PWiFTY26URqLA
      sgUzJx3cjhEmENi6hQJk4UTk67pWjKM16Qcf8fXE5/zPyN8eWCSvZ7dAa5jcGF4rjTGaVMrF
      caIEuGTKQbU0qba/jSDqTTtSsHjjVZdrEw6pyLm9bQy49n3d///8F2II81cQ+5TTvp8YY7jo
      XWd0QO9436Ey2A68fsFdH/wQGe5ee93l6tdc6g34/HZAvanJZQRf3Nm630/otjO3iFoarVej
      Ld7lj4Z/zav5MqZR2Ye73J6eF4CwbBaHfkK9kkRrvbFPFBYOFlK2Q3GbIja5nCQlBXoPo4ti
      L738XoBd7439FqdTpWd8084TghSCm7cDllc1F2ccvvF6gvJqwGA6KnvsvE5rS5qIQazMcWX1
      3zkzJXEdgVN+vJu7eSF6XgAAauQ8d7J/w73FSzQqG4djLSVR7c9/OxGM5iV6ztB8/HID19Dx
      OwVg9i9W/1QCb1dRkkTxK86Peuu/QmzzZUnRtTqufSkFN2YD0gkLzzM8mAvRGmwLllY0A5m2
      IZaB/34wTuXEtfX3lSuP+fqjf+Iv+Ad+9EYZy4JPHiUIcwdnW9/TzwCdiMExqrk/p1Z6yOiT
      f2V0ZIFh2+DYUZdwrXWUpyLk+mQ2OmYxOmbx2WzAimewEs+/7dksJh0KwsQJDiPpYbc1Ckob
      fvtlC4FB6o6zLAEXTztkUxLHFuTSghuzHrYtODttY1nRzH/5rEuq/dlV6pqvHga8ds7l/lyI
      6whuL1h8VLvE/cK3188zjDFcaF3nvbOPNrZBGOasGcgM7ep+XoTYCADalT8jp3iS+hnVz/6R
      LHOsBfbWErfMNtGbi+dsPpgNsHaceDqd1Da/Ev2uem0IOX1i9zdxCKjhadJhgpGhgM33+eVi
      QKtlmL0VkBmQZDOCdFrwH9cDXhlzeP2c29WYI5OMimksKzLn/WQuxy/TP0MPbe3hbCuva/Br
      bVhNTB1oKkusBLCGSA8Sjlwg5SxSLCpGR631bdFaHntxSbFSjozAdQg8s41Ytwg2i8jTE4jE
      izX+PiqYzDDX567xg8HfIGT3dnByIlrTGp7m0oWNkNlCVjGetLoGP0TpKLlstPX8YH6aDzM/
      wqQGtzxBCCFYYBKt7667yhXLgmp25sWuPfQjH6eXPCmOxTPAdmiZQloCb1NoWwhBo6FZbmiG
      T0pGTkmaxiB3rJl49mwUtARe/p1dX/NhIYRgYfAaiys7F45s/hTGxy3mWyE373X3L1vrXPNo
      CX6d/hEmvfN2xukUm4Evy3n0wM4tUPX9T7f+pbRfKMFuy4+/9E8ecYyTxXItijWNMeB70eyv
      NZSWNbnhqNxPCMHgsGQ3yYYrzcuY/IvNXEcNkR3id/U3wGzdFChlthiECRGtDsVmwNzSxsP/
      fDFksmBzogCJ0u0d309WnvCd7P+tz/7GGG6pc9umjq9lgsrTl7e8JuRWZ7oXIZZbIAAZVJBp
      Qd0IvroX8qAeQjOyL1PC8FpuY7ZzEwKnaFCrBlPYsE3ZYOv+X4dRywHPG8AbfOtQU7D3isWx
      d7nz5CZnxqt03vONTwPOzGw/VCanLX7zqUdhyUcHgitnXCwr6h8zo2a5yfYpIcnqQ06/4rO2
      tlSbgrnEqzv6Ge0XsRSAMYaUeoCUgsSo5Pa9kOFzFmGg2wXdgnvzIScLFpmcJJ0VXLzg0Kob
      PrkfkJu2OnpJdQ9+FUCtlGYl/CbkxpFDI8j84Xab3DOcJKteGkG9qwNMJiPI5bZuFqo1zdyi
      4srVaDJZWlRd0VjX2jk02xg6y1xJMN3e8cwuZWD84IMIsRQAgNA+xkB5QZMZszCm3ce23avY
      Hoc7K4pkUTM9bpHOCJJpwbmCw52FkIGpTmfpKP+5WUtSst9Dn3gFeyC/q73nkUQIApHcNs17
      c0fNZlPzcE5x+szG7JwvSB4vhAznJE0fluTORdnGTtBqWEDUGH02PHsgFimbia8A0Bht0MaQ
      zFmEOkTIDodgKUiPRIdmtxZCTg5YFMYsHAdCb81MfWMgNGppSkN/jRiciO2DkxCCx+Y0mIdd
      T72P5hQnp6NI2v1HISPDFvOLirMXnK5M0MA3tALB+/cn+Vh+E2/qwo4hBJFI8cvyd7l670Pu
      q2kejvzBvt7bTsRTACrEFpG7W1RWGpWviG2GrhACS8JAO7+lWtFYNijfbCTKGagFZxGDT7GZ
      iAmeNYBSEsve2AIlEoLisqJah5Ov2NTrhtNnnI6mGFGIeOGholkRfDJ+DXHq0jPjZ5WxN3lf
      XzmUmX+NeAqgVSftVGisKOy0RnUVV4iOP6Ol3a8ZHjwIkRJKXpTrL52OuL8A4bUO8AYOj+bQ
      WZ6sOkwWFGt1b5msxNOCE6clli3IDUZJEZuDo04q6knADqZm23GYgx9iGgaVq3dx04ZWU5HK
      m3a4s91CiG4JCCEYOmvBlKTmgExKciftdqXZWqquIUzG5EH3GYh0jg/Dd5n9KqBSMdTrGq0V
      E5N22wdI4Psaz1PUax6+Z6jVotXixEmL/IlBGN6bUtCDIJYrgOs/oOkHke+n2HiA23iI23Iu
      SdDQKA3pUQFio3WoQLC8+grq9Hd6Ms//ZVgZe4sHzduI1ZtoDRNTmlqtiTEG27IIghDHdajX
      fUQNMkmbhtQ0wyQfp3/y1D7OR41YrgBGK/ymQToa2T4o2eiCIqgpe92lGAQqMKzcVViJ7l5W
      xkCjZtHIf3/HhttxRAjBQvIKhTHJxKTAcSxc18F1HQyGVDqBFGBZCSwkpZbGceDDyjuEw6/0
      1JlI70j1BXDUE7QGqz1mO2d+ISSWAYxEKYVlC7yqYfKMQ9DSVB4qMlMSaUFL2RT9q4jhrSV6
      cSconOfOYoFLU8vYdgLayWqWtCOHB2GRSkPFNZwYENycH6U29XbPrZKxFAA6S+CZyL1ByK4t
      kFIqKpxxXbTWaK0Jqw6O5TM0miab1yw9VrgFwXLtTcTMD3pqRtsrhO3yhX6bV9W/sVIq47pR
      SMxx7KgKol3ckkxK7i7l+XT4pwirx9yyieEWyBGQFXWEVOgwOvUNw5AwDFFKYds2VtucVSmF
      49j4zYCw7fkhLcFg3qJ0N4k58d2e/EfdKzJhEd+LfECNMUhL4jg2raaHZdl4XsDn93P8LveX
      mD3u6n5QxG4FCH0P3BoDSRclNLYbiSCZchBbylWSgKHlOoyMWNAuaQwDSf3Un2ElMwd9+UeK
      ldQ5Gq3rjOQT1Gua5Xoar5rANmm+XB2imjiPmHkT4/Ru+6j4CWBlkWS2THVBk54E2xE4jk27
      5GJr0bcBMlm+mL9Czp1HGo9a6nXk5LnDuPwjhSic4r+W/pjCwy95krpCODQBtgsqBDdxdCzf
      d0GsBGCMIVv/Lc5wVOZn2XJTDkvU06QLAcNjDfzlZVbP/NXGXx/Dff9mhO0QTF5mznytu+Vq
      r3XGeQq9L+FOWjUyepZmxeBkthvAWwvjIcppy9gPMJXipvOCo8V+OKM9D0f189gLYiUA69Gv
      GRhq4NUMmcLGSW83putrjcDPIAbyB3i1L46plw9NBHElVgLQWEjbYLsGv252mLlMR6tQCFqG
      8vIA5ZEfHvlGFjI7FOvZ+DCI1zNAZhwdgtcwDAzvrO1WBeaLF7FGplGpKcSp6WN10ttng1gJ
      wPYWIQlhsNHUeVuMgNPvYgrTPbkErtXIHvUVqxfoxX//HUkHt9A+uNntB//y/ADNFUGjljpQ
      86U+R5fYrADGGBolQ1hMkBzcPne/7r5BefRtxMk0sodDef2Zf++IzwrgNwlKDcqlNPYOToHJ
      yg30jX/Z/3ZDfXqG2AhAV1cQQyOMnPK3dTE0xmDsHPJr3z/4i+tzZImNADAGr5kgnW7hVbdp
      5qagmX8bOTQePzeHPi9NLARgtCZ8cBP1aJbmckh13nQdGGkNK08GMAO9aV7bZ/+Ix2ZYCAgD
      pAnITUlkUnZUgMFC8TW8mR8jkr1pXttn/4iHAJpVBvwbmAkRhUA7+lOrALzcm4jU8U5t7rM9
      sdgC6WaNeu4bjL9mEzQMnTUstgujwa/g3v/282j6bCEWAhDJLMHdL1j+SlEvGbJj3XHyTLbE
      QOs6OzW56HN8iYUA9OI9WH5EKh85PGymVh2kOvXTWBRw9HkONlxtnkksRoRRCicNXk3jDnY3
      wQ6aUEz9CeTib2vYJ8LCcDVdJSWf3fQhFgKQ6SxGS1p1Qzq/sf0xRlAuF2Cwd5zK+uweBdyo
      Z2nqZ6eMxEIAJNIEyiVsGEp3Q0z7HKyyPEh15ufbdlE0Wu+qtWifI4wQKPl8h52xCIPKgTxk
      hnDSRXQratIgAK0MuDvk+YcB/u/fx9YeTipBePHbiETqQB8GioQAAAHPSURBVK+7z+ETCwFg
      Owghqc6F+DmJTCikBcasohfvYU2c2fIjplWHhdskghWYOgdWP8PyOBILAQjLxnnj23DjFzjJ
      FiYU+GECpRPocnFbAciBYZz3fk5rdQk5PNbPED2mxOMZALAKU/i+TausCH2LRiPL0EgFWfoq
      2u9vRgiE7WAVpvqD/xgTGwHIwQLute8SBha1JYO33MR2Dfn0F1hPPjmwU+C01Ij+w3XPEKup
      zz5zBaRN8NEvsE2F4i1BIm8Ybf4zxVv38TKXEMkMVmH/skIbSlKwFcXQep4e230OmVgJQEgL
      Z+YyMjdC8OkHlO/dQFaS2LUJ5NmZaK+/tQnwHl8EFFV/8PcK4u8+Wzb3/PhFQIwxmNUnqKWH
      GN/HvfzOYV9SnyNIrFaAToQQiOFx5PD4YV9KnyNMbB6C+/R5GfoC6HOs6Qugz7GmL4A+x5q+
      APoca/oC6HOs6QvgZehnOsSGvgA20x/cx4q+ADbzPCkM/TSH2NAXAJCWpj/zH1OOtQAsHQ38
      hhb9Wf2YcqwFoDpdog1RHn9/JThWxDYZ7rkQAIbLaUU1ENS1oBj2l4LjhD3hbFMueExICsNr
      acWSL6kJQdYyZK1nmyn1iQ//DwXLOKHrKwYYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
